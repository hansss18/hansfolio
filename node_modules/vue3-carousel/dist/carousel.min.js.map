{"version":3,"file":"carousel.min.js","sources":["../src/shared/injectSymbols.ts","../src/shared/constants.ts","../src/shared/slideRegistry.ts","../src/utils/getNumberInRange.ts","../src/utils/getScrolledIndex.ts","../src/utils/mapNumberToRange.ts","../src/utils/i18nFormatter.ts","../src/utils/throttle.ts","../src/utils/createCloneSlides.ts","../src/utils/disableChildrenTabbing.ts","../src/components/ARIA/ARIA.ts","../src/components/Carousel/carouselProps.ts","../src/components/Carousel/Carousel.ts","../src/utils/except.ts","../src/utils/getMaxSlideIndex.ts","../src/utils/getMinSlideIndex.ts","../src/utils/getTransformValues.ts","../src/utils/getDraggedSlidesCount.ts","../src/components/Icon/Icon.types.ts","../src/components/Icon/Icon.ts","../src/components/Navigation/Navigation.ts","../src/components/Pagination/Pagination.ts","../src/components/Slide/Slide.ts"],"sourcesContent":["import { InjectionKey } from 'vue'\n\nimport { InjectedCarousel } from '@/components/Carousel'\n\n// Use a symbol for inject provide to avoid any kind of collision with another lib\n// https://vuejs.org/guide/components/provide-inject#working-with-symbol-keys\nexport const injectCarousel = Symbol('carousel') as InjectionKey<\n  InjectedCarousel | undefined\n>\n","import { CarouselConfig } from './types'\n\nexport const SNAP_ALIGN_OPTIONS = [\n  'center',\n  'start',\n  'end',\n  'center-even',\n  'center-odd',\n] as const\nexport const SLIDE_EFFECTS = ['slide', 'fade'] as const\nexport const BREAKPOINT_MODE_OPTIONS = ['viewport', 'carousel'] as const\nexport const DIR_OPTIONS = [\n  'ltr',\n  'left-to-right',\n  'rtl',\n  'right-to-left',\n  'ttb',\n  'top-to-bottom',\n  'btt',\n  'bottom-to-top',\n] as const\nexport const I18N_DEFAULT_CONFIG = {\n  ariaNextSlide: 'Navigate to next slide',\n  ariaPreviousSlide: 'Navigate to previous slide',\n  ariaNavigateToSlide: 'Navigate to slide {slideNumber}',\n  ariaNavigateToPage: 'Navigate to page {slideNumber}',\n  ariaGallery: 'Gallery',\n  itemXofY: 'Item {currentSlide} of {slidesCount}',\n  iconArrowUp: 'Arrow pointing upwards',\n  iconArrowDown: 'Arrow pointing downwards',\n  iconArrowRight: 'Arrow pointing to the right',\n  iconArrowLeft: 'Arrow pointing to the left',\n} as const\n\nexport const DIR_MAP = {\n  'left-to-right': 'ltr',\n  'right-to-left': 'rtl',\n  'top-to-bottom': 'ttb',\n  'bottom-to-top': 'btt',\n} as const\n\nexport const NORMALIZED_DIR_OPTIONS = Object.values(DIR_MAP)\n\nexport const DEFAULT_CONFIG: CarouselConfig = {\n  enabled: true,\n  itemsToShow: 1,\n  itemsToScroll: 1,\n  modelValue: 0,\n  transition: 300,\n  autoplay: 0,\n  gap: 0,\n  height: 'auto',\n  wrapAround: false,\n  pauseAutoplayOnHover: false,\n  mouseDrag: true,\n  touchDrag: true,\n  snapAlign: SNAP_ALIGN_OPTIONS[0],\n  dir: DIR_OPTIONS[0],\n  breakpointMode: BREAKPOINT_MODE_OPTIONS[0],\n  breakpoints: undefined,\n  i18n: I18N_DEFAULT_CONFIG,\n  ignoreAnimations: false,\n  slideEffect: SLIDE_EFFECTS[0],\n}\n","import { ComponentInternalInstance, EmitFn, shallowReactive } from 'vue'\n\nconst createSlideRegistry = (emit: EmitFn) => {\n  const slides = shallowReactive<Array<ComponentInternalInstance>>([])\n  const clonedSlides = shallowReactive<Array<ComponentInternalInstance>>([])\n\n  const updateSlideIndexes = (startIndex?: number) => {\n    if (startIndex !== undefined) {\n      slides.slice(startIndex).forEach((slide, offset) => {\n        slide.exposed?.setIndex(startIndex + offset)\n      })\n    } else {\n      slides.forEach((slide, index) => {\n        slide.exposed?.setIndex(index)\n      })\n    }\n  }\n\n  return {\n    registerSlide: (slide: ComponentInternalInstance, index?: number) => {\n      if (!slide) return\n\n      if (slide.props.isClone) {\n        clonedSlides.push(slide)\n        return\n      }\n\n      const slideIndex = index ?? slides.length\n      slides.splice(slideIndex, 0, slide)\n      updateSlideIndexes(slideIndex)\n      emit('slide-registered', { slide, index: slideIndex })\n    },\n\n    unregisterSlide: (slide: ComponentInternalInstance) => {\n      const slideIndex = slides.indexOf(slide)\n      if (slideIndex === -1) return\n\n      emit('slide-unregistered', { slide, index: slideIndex })\n\n      slides.splice(slideIndex, 1)\n      updateSlideIndexes(slideIndex)\n    },\n\n    cleanup: () => {\n      slides.splice(0, slides.length)\n    },\n\n    getSlides: () => slides,\n    getClonedSlides: () => clonedSlides,\n  }\n}\n\nexport type SlideRegistry = ReturnType<typeof createSlideRegistry>\n\nexport { createSlideRegistry }\n","type GetNumberInRangeArgs = {\n  val: number\n  max: number\n  min: number\n}\n\nexport function getNumberInRange({ val, max, min }: GetNumberInRangeArgs): number {\n  if (max < min) {\n    return val\n  }\n  return Math.min(Math.max(val, isNaN(min) ? val : min), isNaN(max) ? val : max)\n}\n","import { CarouselConfig } from '@/shared'\n\nimport { getNumberInRange } from './getNumberInRange'\n\ntype GetScrolledIndexArgs = {\n  config: Pick<CarouselConfig, 'itemsToShow' | 'wrapAround' | 'snapAlign'>\n  currentSlide: number\n  slidesCount: number\n}\n\nexport const calculateOffset = (snapAlign: string, itemsToShow: number): number => {\n  switch (snapAlign) {\n    default:\n    case 'start':\n      return 0\n    case 'center':\n      return (itemsToShow - 1) / 2\n    case 'center-odd':\n      return (itemsToShow - 1) / 2\n    case 'center-even':\n      return (itemsToShow - 2) / 2\n    case 'end':\n      return itemsToShow - 1\n  }\n}\n\nexport function getScrolledIndex({\n  config,\n  currentSlide,\n  slidesCount,\n}: GetScrolledIndexArgs): number {\n  const { snapAlign = 'center', wrapAround, itemsToShow = 1 } = config\n\n  // Calculate the offset based on snapAlign\n  const offset = calculateOffset(snapAlign, itemsToShow)\n\n  // Compute the index with or without wrapAround\n  if (wrapAround) {\n    return currentSlide - offset\n  }\n  return getNumberInRange({\n    val: currentSlide - offset,\n    max: slidesCount - itemsToShow,\n    min: 0,\n  })\n}\n","type MapNumberToRangeArgs = {\n  val: number\n  max: number\n  min?: number\n}\n\nexport function mapNumberToRange({ val, max, min = 0 }: MapNumberToRangeArgs): number {\n  const mod = max - min + 1\n  return ((((val - min) % mod) + mod) % mod) + min\n}\n","export function i18nFormatter(string = '', values = {}) {\n  return Object.entries(values).reduce(\n    (acc, [key, value]) => acc.replace(`{${key}}`, String(value)),\n    string\n  )\n}\n","/**\n * Returns a throttled version of the function using requestAnimationFrame.\n *\n * @param fn - The function to throttle.\n * @param ms - The number of milliseconds to wait for the throttled function to be called again\n */\nexport function throttle<Args extends Array<unknown>>(\n  fn: (...args: Args) => void,\n  ms = 0\n): { (...args: Args): void; cancel: () => void } {\n  let isThrottled = false\n  let start = 0\n  let frameId: number | null = null\n\n  function throttled(...args: Args) {\n    if (isThrottled) return\n\n    isThrottled = true\n    const step = () => {\n      frameId = requestAnimationFrame((time) => {\n        const elapsed = time - start\n        if (elapsed > ms) {\n          start = time\n          fn(...args)\n          isThrottled = false\n        } else {\n          step()\n        }\n      })\n    }\n    step()\n  }\n\n  throttled.cancel = () => {\n    if (frameId) {\n      cancelAnimationFrame(frameId)\n      frameId = null\n      isThrottled = false\n    }\n  }\n\n  return throttled\n}\n","import { cloneVNode, ComponentInternalInstance, VNode } from 'vue'\n\ntype CreateCloneSlidesArgs = {\n  slides: Array<ComponentInternalInstance>\n  position: 'before' | 'after'\n  toShow: number\n}\n\nexport function createCloneSlides({ slides, position, toShow }: CreateCloneSlidesArgs) {\n  const clones: VNode[] = []\n  const isBefore = position === 'before'\n  const start = isBefore ? -toShow : 0\n  const end = isBefore ? 0 : toShow\n\n  if (slides.length <= 0) {\n    return clones\n  }\n\n  for (let i = start; i < end; i++) {\n    const index = isBefore ? i : i + slides.length\n    const props = {\n      index,\n      isClone: true,\n      id: undefined, // Make sure we don't duplicate the id which would be invalid html\n      key: `clone-${position}-${i}`,\n    }\n    const vnode = slides[((i % slides.length) + slides.length) % slides.length].vnode\n    const clone = cloneVNode(vnode, props)\n    clone.el = null\n    clones.push(clone)\n  }\n\n  return clones\n}\n","import { VNode } from 'vue'\n\nconst FOCUSABLE_ELEMENTS_SELECTOR =\n  'a[href], button, input, textarea, select, details, [tabindex]:not([tabindex=\"-1\"])'\n\n/**\n * Disables keyboard tab navigation for all focusable child elements\n * @param node Vue virtual node containing the elements to disable\n */\nexport function disableChildrenTabbing(node: VNode) {\n  if (!node.el || !(node.el instanceof Element)) {\n    return\n  }\n\n  const elements = node.el.querySelectorAll(FOCUSABLE_ELEMENTS_SELECTOR)\n\n  for (const el of elements) {\n    if (\n      el instanceof HTMLElement &&\n      !el.hasAttribute('disabled') &&\n      el.getAttribute('aria-hidden') !== 'true'\n    ) {\n      el.setAttribute('tabindex', '-1')\n    }\n  }\n}\n","import { defineComponent, inject, h } from 'vue'\n\nimport { injectCarousel } from '@/shared'\nimport { i18nFormatter } from '@/utils'\n\nexport const ARIA = defineComponent({\n  name: 'CarouselAria',\n  setup() {\n    const carousel = inject(injectCarousel)\n\n    if (!carousel) {\n      return () => ''\n    }\n\n    return () =>\n      h(\n        'div',\n        {\n          class: ['carousel__liveregion', 'carousel__sr-only'],\n          'aria-live': 'polite',\n          'aria-atomic': 'true',\n        },\n        i18nFormatter(carousel.config.i18n['itemXofY'], {\n          currentSlide: carousel.currentSlide + 1,\n          slidesCount: carousel.slidesCount,\n        })\n      )\n  },\n})\n","import { PropType } from 'vue'\n\nimport {\n  BREAKPOINT_MODE_OPTIONS,\n  DEFAULT_CONFIG,\n  DIR_OPTIONS,\n  SLIDE_EFFECTS,\n  SNAP_ALIGN_OPTIONS,\n} from '@/shared'\n\nimport type {\n  BreakpointMode,\n  Dir,\n  SnapAlign,\n  CarouselConfig,\n  SlideEffect,\n} from '@/shared'\n\nexport const carouselProps = {\n  // enable/disable the carousel component\n  enabled: {\n    default: DEFAULT_CONFIG.enabled,\n    type: Boolean,\n  },\n  // count of items to showed per view\n  itemsToShow: {\n    default: DEFAULT_CONFIG.itemsToShow,\n    type: Number,\n  },\n  // count of items to be scrolled\n  itemsToScroll: {\n    default: DEFAULT_CONFIG.itemsToScroll,\n    type: Number,\n  },\n  // control infinite scrolling mode\n  wrapAround: {\n    default: DEFAULT_CONFIG.wrapAround,\n    type: Boolean,\n  },\n  // control the gap between slides\n  gap: {\n    default: DEFAULT_CONFIG.gap,\n    type: Number,\n  },\n  // control the gap between slides\n  height: {\n    default: DEFAULT_CONFIG.height,\n    type: [Number, String],\n  },\n  // control snap position alignment\n  snapAlign: {\n    default: DEFAULT_CONFIG.snapAlign,\n    validator(value: SnapAlign) {\n      return SNAP_ALIGN_OPTIONS.includes(value)\n    },\n  },\n  // sliding transition time in ms\n  transition: {\n    default: DEFAULT_CONFIG.transition,\n    type: Number,\n  },\n  // controls the breakpoint mode relative to the carousel container or the viewport\n  breakpointMode: {\n    default: DEFAULT_CONFIG.breakpointMode,\n    validator(value: BreakpointMode) {\n      return BREAKPOINT_MODE_OPTIONS.includes(value)\n    },\n  },\n  // an object to store breakpoints\n  breakpoints: {\n    default: DEFAULT_CONFIG.breakpoints,\n    type: Object as PropType<CarouselConfig['breakpoints']>,\n  },\n  // time to auto advance slides in ms\n  autoplay: {\n    default: DEFAULT_CONFIG.autoplay,\n    type: Number,\n  },\n  // pause autoplay when mouse hover over the carousel\n  pauseAutoplayOnHover: {\n    default: DEFAULT_CONFIG.pauseAutoplayOnHover,\n    type: Boolean,\n  },\n  // slide number number of initial slide\n  modelValue: {\n    default: undefined,\n    type: Number,\n  },\n  // toggle mouse dragging.\n  mouseDrag: {\n    default: DEFAULT_CONFIG.mouseDrag,\n    type: Boolean,\n  },\n  // toggle mouse dragging.\n  touchDrag: {\n    default: DEFAULT_CONFIG.touchDrag,\n    type: Boolean,\n  },\n  // control snap position alignment\n  dir: {\n    type: String as PropType<Dir>,\n    default: DEFAULT_CONFIG.dir,\n    validator(value: Dir) {\n      // The value must match one of these strings\n      return DIR_OPTIONS.includes(value)\n    },\n  },\n  // aria-labels and additional text labels\n  i18n: {\n    default: DEFAULT_CONFIG.i18n,\n    type: Object as PropType<typeof DEFAULT_CONFIG.i18n>,\n  },\n  ignoreAnimations: {\n    default: false,\n    type: [Array, Boolean, String] as PropType<CarouselConfig['ignoreAnimations']>,\n  },\n  slideEffect: {\n    type: String as PropType<SlideEffect>,\n    default: DEFAULT_CONFIG.slideEffect,\n    validator(value: SlideEffect) {\n      return SLIDE_EFFECTS.includes(value)\n    },\n  },\n}\n","import {\n  defineComponent,\n  onMounted,\n  onBeforeUnmount,\n  ref,\n  reactive,\n  provide,\n  computed,\n  h,\n  watch,\n  SetupContext,\n  Ref,\n  ComputedRef,\n  watchEffect,\n  shallowReactive,\n} from 'vue'\n\nimport { ARIA as ARIAComponent } from '@/components/ARIA'\nimport {\n  CarouselConfig,\n  DEFAULT_CONFIG,\n  DIR_MAP,\n  NonNormalizedDir,\n  NormalizedDir,\n  injectCarousel,\n  createSlideRegistry,\n} from '@/shared'\nimport {\n  except,\n  throttle,\n  getNumberInRange,\n  getMaxSlideIndex,\n  getMinSlideIndex,\n  mapNumberToRange,\n  getScrolledIndex,\n  getTransformValues,\n  createCloneSlides,\n  getDraggedSlidesCount,\n} from '@/utils'\n\nimport {\n  CarouselData,\n  CarouselExposed,\n  CarouselNav,\n  InjectedCarousel,\n} from './Carousel.types'\nimport { carouselProps } from './carouselProps'\n\nexport const Carousel = defineComponent({\n  name: 'VueCarousel',\n  props: carouselProps,\n  emits: [\n    'init',\n    'drag',\n    'slide-start',\n    'loop',\n    'update:modelValue',\n    'slide-end',\n    'before-init',\n    'slide-registered',\n    'slide-unregistered',\n  ],\n  setup(props: CarouselConfig, { slots, emit, expose }: SetupContext) {\n    const slideRegistry = createSlideRegistry(emit)\n    const slides = slideRegistry.getSlides()\n    const slidesCount = computed(() => slides.length)\n\n    const root: Ref<Element | null> = ref(null)\n    const viewport: Ref<Element | null> = ref(null)\n    const slideSize: Ref<number> = ref(0)\n\n    const fallbackConfig = computed(() => ({\n      ...DEFAULT_CONFIG,\n      // Avoid reactivity tracking in breakpoints and vModel which would trigger unnecessary updates\n      ...except(props, ['breakpoints', 'modelValue']),\n      i18n: { ...DEFAULT_CONFIG.i18n, ...props.i18n },\n    }))\n\n    // current active config\n    const config = shallowReactive<CarouselConfig>({ ...fallbackConfig.value })\n\n    // slides\n    const currentSlideIndex = ref(props.modelValue ?? 0)\n    const activeSlideIndex = ref(currentSlideIndex.value)\n\n    watch(currentSlideIndex, (val) => (activeSlideIndex.value = val))\n    const prevSlideIndex = ref(0)\n    const middleSlideIndex = computed(() => Math.ceil((slidesCount.value - 1) / 2))\n    const maxSlideIndex = computed(() => {\n      return getMaxSlideIndex({ config, slidesCount: slidesCount.value })\n    })\n    const minSlideIndex = computed(() => {\n      return getMinSlideIndex({ config, slidesCount: slidesCount.value })\n    })\n\n    let autoplayTimer: ReturnType<typeof setInterval> | null = null\n    let transitionTimer: ReturnType<typeof setTimeout> | null = null\n    let resizeObserver: ResizeObserver | null = null\n\n    const effectiveSlideSize = computed(() => slideSize.value + config.gap)\n\n    const normalizedDir = computed<NormalizedDir>(() => {\n      const dir = config.dir || 'ltr'\n      return dir in DIR_MAP ? DIR_MAP[dir as NonNormalizedDir] : (dir as NormalizedDir)\n    })\n\n    const isReversed = computed(() => ['rtl', 'btt'].includes(normalizedDir.value))\n    const isVertical = computed(() => ['ttb', 'btt'].includes(normalizedDir.value))\n\n    function updateBreakpointsConfig(): void {\n      if (!mounted.value) {\n        return\n      }\n      // Determine the width source based on the 'breakpointMode' config\n      const widthSource =\n        (fallbackConfig.value.breakpointMode === 'carousel'\n          ? root.value?.getBoundingClientRect().width\n          : typeof window !== 'undefined'\n            ? window.innerWidth\n            : 0) || 0\n\n      const breakpointsArray = Object.keys(props.breakpoints || {})\n        .map((key) => Number(key))\n        .sort((a, b) => +b - +a)\n\n      const newConfig: Partial<CarouselConfig> = {}\n      breakpointsArray.some((breakpoint) => {\n        if (widthSource >= breakpoint) {\n          Object.assign(newConfig, props.breakpoints![breakpoint])\n          if (newConfig.i18n) {\n            Object.assign(\n              newConfig.i18n,\n              fallbackConfig.value.i18n,\n              props.breakpoints![breakpoint].i18n\n            )\n          }\n          return true\n        }\n        return false\n      })\n\n      Object.assign(config, fallbackConfig.value, newConfig)\n    }\n\n    const handleResize = throttle(() => {\n      updateBreakpointsConfig()\n      updateSlidesData()\n      updateSlideSize()\n    })\n\n    const totalGap = computed(() => (config.itemsToShow - 1) * config.gap)\n    const transformElements = shallowReactive<Set<HTMLElement>>(new Set())\n\n    /**\n     * Setup functions\n     */\n    function updateSlideSize(): void {\n      if (!viewport.value) return\n      let multiplierWidth = 1\n      transformElements.forEach((el) => {\n        const transformArr = getTransformValues(el)\n\n        if (transformArr.length === 6) {\n          multiplierWidth *= transformArr[0]\n        }\n      })\n\n      // Calculate size based on orientation\n      if (isVertical.value) {\n        if (config.height !== 'auto') {\n          const height =\n            typeof config.height === 'string' && isNaN(parseInt(config.height))\n              ? viewport.value.getBoundingClientRect().height\n              : parseInt(config.height as string)\n\n          slideSize.value = (height - totalGap.value) / config.itemsToShow\n        }\n      } else {\n        const width = viewport.value.getBoundingClientRect().width\n        slideSize.value = (width / multiplierWidth - totalGap.value) / config.itemsToShow\n      }\n    }\n\n    function updateSlidesData(): void {\n      if (!config.wrapAround && slidesCount.value > 0) {\n        currentSlideIndex.value = getNumberInRange({\n          val: currentSlideIndex.value,\n          max: maxSlideIndex.value,\n          min: minSlideIndex.value,\n        })\n      }\n\n      // Validate itemsToShow\n      config.itemsToShow = getNumberInRange({\n        val: config.itemsToShow,\n        max: slidesCount.value,\n        min: 1,\n      })\n    }\n\n    const ignoreAnimations = computed<false | string[]>(() => {\n      if (typeof props.ignoreAnimations === 'string') {\n        return props.ignoreAnimations.split(',')\n      } else if (Array.isArray(props.ignoreAnimations)) {\n        return props.ignoreAnimations\n      } else if (!props.ignoreAnimations) {\n        return []\n      }\n      return false\n    })\n\n    watchEffect(() => updateSlidesData())\n\n    watchEffect(() => {\n      // Call updateSlideSize when viewport is ready and track deps\n      updateSlideSize()\n    })\n\n    let animationInterval: number\n\n    const setAnimationInterval = (event: AnimationEvent) => {\n      const target = event.target as HTMLElement\n      if (\n        !target?.contains(root.value) ||\n        (Array.isArray(ignoreAnimations.value) &&\n          ignoreAnimations.value.includes(event.animationName))\n      ) {\n        return\n      }\n\n      transformElements.add(target)\n      if (!animationInterval) {\n        const stepAnimation = () => {\n          animationInterval = requestAnimationFrame(() => {\n            updateSlideSize()\n            stepAnimation()\n          })\n        }\n        stepAnimation()\n      }\n    }\n    const finishAnimation = (event: AnimationEvent | TransitionEvent) => {\n      const target = event.target as HTMLElement\n      if (target) {\n        transformElements.delete(target)\n      }\n      if (animationInterval && transformElements.size === 0) {\n        cancelAnimationFrame(animationInterval)\n        updateSlideSize()\n      }\n    }\n\n    const mounted = ref(false)\n\n    if (typeof document !== 'undefined') {\n      watchEffect(() => {\n        if (mounted.value && ignoreAnimations.value !== false) {\n          document.addEventListener('animationstart', setAnimationInterval)\n          document.addEventListener('animationend', finishAnimation)\n        } else {\n          document.removeEventListener('animationstart', setAnimationInterval)\n          document.removeEventListener('animationend', finishAnimation)\n        }\n      })\n    }\n\n    onMounted((): void => {\n      mounted.value = true\n      updateBreakpointsConfig()\n      initAutoplay()\n\n      if (root.value) {\n        resizeObserver = new ResizeObserver(handleResize)\n        resizeObserver.observe(root.value)\n      }\n\n      emit('init')\n    })\n\n    onBeforeUnmount(() => {\n      mounted.value = false\n\n      slideRegistry.cleanup()\n\n      if (transitionTimer) {\n        clearTimeout(transitionTimer)\n      }\n      if (animationInterval) {\n        cancelAnimationFrame(animationInterval)\n      }\n      if (autoplayTimer) {\n        clearInterval(autoplayTimer)\n      }\n      if (resizeObserver) {\n        resizeObserver.disconnect()\n        resizeObserver = null\n      }\n\n      if (typeof document !== 'undefined') {\n        handleBlur()\n      }\n      if (root.value) {\n        root.value.removeEventListener('transitionend', updateSlideSize)\n        root.value.removeEventListener('animationiteration', updateSlideSize)\n      }\n    })\n\n    /**\n     * Carousel Event listeners\n     */\n    let isTouch = false\n    const startPosition = { x: 0, y: 0 }\n    const dragged = reactive({ x: 0, y: 0 })\n    const isHover = ref(false)\n    const isDragging = ref(false)\n\n    const handleMouseEnter = (): void => {\n      isHover.value = true\n    }\n    const handleMouseLeave = (): void => {\n      isHover.value = false\n    }\n\n    const handleArrowKeys = throttle((event: KeyboardEvent): void => {\n      if (event.ctrlKey) return\n      switch (event.key) {\n        case 'ArrowLeft':\n        case 'ArrowUp':\n          if (isVertical.value === event.key.endsWith('Up')) {\n            if (isReversed.value) {\n              nav.next(true)\n            } else {\n              nav.prev(true)\n            }\n          }\n          break\n        case 'ArrowRight':\n        case 'ArrowDown':\n          if (isVertical.value === event.key.endsWith('Down')) {\n            if (isReversed.value) {\n              nav.prev(true)\n            } else {\n              nav.next(true)\n            }\n          }\n          break\n      }\n    }, 200)\n    const handleFocus = (): void => {\n      document.addEventListener('keydown', handleArrowKeys)\n    }\n    const handleBlur = (): void => {\n      document.removeEventListener('keydown', handleArrowKeys)\n    }\n\n    function handleDragStart(event: MouseEvent | TouchEvent): void {\n      // Prevent drag initiation on input elements or if already sliding\n      const targetTagName = (event.target as HTMLElement).tagName\n      if (['INPUT', 'TEXTAREA', 'SELECT'].includes(targetTagName) || isSliding.value) {\n        return\n      }\n\n      // Detect if the event is a touchstart or mousedown event\n      isTouch = event.type === 'touchstart'\n\n      // For mouse events, prevent default to avoid text selection\n      if (!isTouch) {\n        event.preventDefault()\n        if ((event as MouseEvent).button !== 0) {\n          // Ignore non-left-click mouse events\n          return\n        }\n      }\n\n      // Initialize start positions for the drag\n      startPosition.x = 'touches' in event ? event.touches[0].clientX : event.clientX\n      startPosition.y = 'touches' in event ? event.touches[0].clientY : event.clientY\n\n      // Attach event listeners for dragging and drag end\n\n      const moveEvent = isTouch ? 'touchmove' : 'mousemove'\n      const endEvent = isTouch ? 'touchend' : 'mouseup'\n      document.addEventListener(moveEvent, handleDragging, { passive: false })\n      document.addEventListener(endEvent, handleDragEnd, { passive: true })\n    }\n\n    const handleDragging = throttle((event: TouchEvent | MouseEvent): void => {\n      isDragging.value = true\n\n      // Get the current position based on the interaction type (touch or mouse)\n      const currentX = 'touches' in event ? event.touches[0].clientX : event.clientX\n      const currentY = 'touches' in event ? event.touches[0].clientY : event.clientY\n\n      // Calculate deltas for X and Y axes\n      dragged.x = currentX - startPosition.x\n      dragged.y = currentY - startPosition.y\n\n      const draggedSlides = getDraggedSlidesCount({\n        isVertical: isVertical.value,\n        isReversed: isReversed.value,\n        dragged,\n        effectiveSlideSize: effectiveSlideSize.value,\n      })\n\n      activeSlideIndex.value = config.wrapAround\n        ? currentSlideIndex.value + draggedSlides\n        : getNumberInRange({\n            val: currentSlideIndex.value + draggedSlides,\n            max: maxSlideIndex.value,\n            min: minSlideIndex.value,\n          })\n\n      // Emit a drag event for further customization if needed\n      emit('drag', { deltaX: dragged.x, deltaY: dragged.y })\n    })\n\n    function handleDragEnd(): void {\n      handleDragging.cancel()\n\n      // Prevent accidental clicks when there is a slide drag\n      if (activeSlideIndex.value !== currentSlideIndex.value && !isTouch) {\n        const preventClick = (e: MouseEvent) => {\n          e.preventDefault()\n          window.removeEventListener('click', preventClick)\n        }\n        window.addEventListener('click', preventClick)\n      }\n\n      slideTo(activeSlideIndex.value)\n\n      // Reset drag state\n      dragged.x = 0\n      dragged.y = 0\n      isDragging.value = false\n\n      const moveEvent = isTouch ? 'touchmove' : 'mousemove'\n      const endEvent = isTouch ? 'touchend' : 'mouseup'\n      document.removeEventListener(moveEvent, handleDragging)\n      document.removeEventListener(endEvent, handleDragEnd)\n    }\n\n    /**\n     * Autoplay\n     */\n    function initAutoplay(): void {\n      if (!config.autoplay || config.autoplay <= 0) {\n        return\n      }\n\n      autoplayTimer = setInterval(() => {\n        if (config.pauseAutoplayOnHover && isHover.value) {\n          return\n        }\n\n        next()\n      }, config.autoplay)\n    }\n\n    function stopAutoplay(): void {\n      if (autoplayTimer) {\n        clearInterval(autoplayTimer)\n        autoplayTimer = null\n      }\n    }\n\n    function resetAutoplay(): void {\n      stopAutoplay()\n      initAutoplay()\n    }\n\n    /**\n     * Navigation function\n     */\n    const isSliding = ref(false)\n\n    function slideTo(slideIndex: number, skipTransition = false): void {\n      if (!skipTransition && isSliding.value) {\n        return\n      }\n\n      let targetIndex = slideIndex\n      let mappedIndex = slideIndex\n\n      prevSlideIndex.value = currentSlideIndex.value\n\n      if (!config.wrapAround) {\n        targetIndex = getNumberInRange({\n          val: targetIndex,\n          max: maxSlideIndex.value,\n          min: minSlideIndex.value,\n        })\n      } else {\n        mappedIndex = mapNumberToRange({\n          val: targetIndex,\n          max: maxSlideIndex.value,\n          min: 0,\n        })\n      }\n\n      emit('slide-start', {\n        slidingToIndex: slideIndex,\n        currentSlideIndex: currentSlideIndex.value,\n        prevSlideIndex: prevSlideIndex.value,\n        slidesCount: slidesCount.value,\n      })\n\n      stopAutoplay()\n      isSliding.value = true\n\n      currentSlideIndex.value = targetIndex\n      if (mappedIndex !== targetIndex) {\n        modelWatcher.pause()\n      }\n      emit('update:modelValue', mappedIndex)\n\n      const transitionCallback = (): void => {\n        if (config.wrapAround) {\n          if (mappedIndex !== targetIndex) {\n            modelWatcher.resume()\n\n            currentSlideIndex.value = mappedIndex\n            emit('loop', {\n              currentSlideIndex: currentSlideIndex.value,\n              slidingToIndex: slideIndex,\n            })\n          }\n        }\n\n        emit('slide-end', {\n          currentSlideIndex: currentSlideIndex.value,\n          prevSlideIndex: prevSlideIndex.value,\n          slidesCount: slidesCount.value,\n        })\n\n        isSliding.value = false\n        resetAutoplay()\n      }\n\n      transitionTimer = setTimeout(transitionCallback, config.transition)\n    }\n\n    function next(skipTransition = false): void {\n      slideTo(currentSlideIndex.value + config.itemsToScroll, skipTransition)\n    }\n\n    function prev(skipTransition = false): void {\n      slideTo(currentSlideIndex.value - config.itemsToScroll, skipTransition)\n    }\n\n    const nav: CarouselNav = { slideTo, next, prev }\n\n    const scrolledIndex = computed(() =>\n      getScrolledIndex({\n        config,\n        currentSlide: currentSlideIndex.value,\n        slidesCount: slidesCount.value,\n      })\n    )\n\n    const provided: InjectedCarousel = reactive({\n      config,\n      slidesCount,\n      viewport,\n      slides,\n      scrolledIndex,\n      currentSlide: currentSlideIndex,\n      activeSlide: activeSlideIndex,\n      maxSlide: maxSlideIndex,\n      minSlide: minSlideIndex,\n      slideSize,\n      isVertical,\n      normalizedDir,\n      nav,\n      isSliding,\n      slideRegistry,\n    })\n\n    provide(injectCarousel, provided)\n    /** @deprecated provides */\n    provide('config', config)\n    provide('slidesCount', slidesCount)\n    provide('currentSlide', currentSlideIndex)\n    provide('maxSlide', maxSlideIndex)\n    provide('minSlide', minSlideIndex)\n    provide('slideSize', slideSize)\n    provide('isVertical', isVertical)\n    provide('normalizeDir', normalizedDir)\n    provide('nav', nav)\n    provide('isSliding', isSliding)\n\n    function restartCarousel(): void {\n      updateBreakpointsConfig()\n      updateSlidesData()\n      updateSlideSize()\n      resetAutoplay()\n    }\n\n    // Update the carousel on props change\n    watch(\n      () => [fallbackConfig.value, props.breakpoints],\n      () => updateBreakpointsConfig(),\n      { deep: true }\n    )\n\n    watch(\n      () => props.autoplay,\n      () => resetAutoplay()\n    )\n\n    // Handle changing v-model value\n    const modelWatcher = watch(\n      () => props.modelValue,\n      (val) => {\n        if (val === currentSlideIndex.value) {\n          return\n        }\n        slideTo(Number(val), true)\n      }\n    )\n\n    // Init carousel\n    emit('before-init')\n\n    const data = reactive<CarouselData>({\n      config,\n      slidesCount,\n      slideSize,\n      currentSlide: currentSlideIndex,\n      maxSlide: maxSlideIndex,\n      minSlide: minSlideIndex,\n      middleSlide: middleSlideIndex,\n    })\n\n    expose<CarouselExposed>({\n      updateBreakpointsConfig,\n      updateSlidesData,\n      updateSlideSize,\n      restartCarousel,\n      slideTo,\n      next,\n      prev,\n      nav,\n      data,\n    })\n\n    const trackHeight = computed(() => {\n      // If the carousel is vertical and height is set to auto, calculate the height based on slide size and gap\n      if (config.height === 'auto') {\n        if (isVertical.value && slideSize.value) {\n          return `${slideSize.value * config.itemsToShow + totalGap.value}px`\n        }\n        return undefined\n      }\n\n      if (\n        typeof config.height === 'number' ||\n        parseFloat(config.height).toString() === config.height\n      ) {\n        return `${config.height}px`\n      } else {\n        return config.height\n      }\n    })\n\n    const clonedSlidesCount = computed(() => {\n      if (!config.wrapAround) {\n        return { before: 0, after: 0 }\n      }\n\n      const slidesToClone = Math.ceil(config.itemsToShow + (config.itemsToScroll - 1))\n      const before = slidesToClone - activeSlideIndex.value\n      const after = slidesToClone - (slidesCount.value - (activeSlideIndex.value + 1))\n\n      return {\n        before: Math.max(0, before),\n        after: Math.max(0, after),\n      }\n    })\n\n    const clonedSlidesOffset = computed(\n      () => clonedSlidesCount.value.before * effectiveSlideSize.value * -1\n    )\n    const trackTransform: ComputedRef<string> = computed(() => {\n      const directionMultiplier = isReversed.value ? 1 : -1\n      const translateAxis = isVertical.value ? 'Y' : 'X'\n\n      // Calculate the total offset for slide transformation\n      const scrolledOffset =\n        scrolledIndex.value * effectiveSlideSize.value * directionMultiplier\n\n      // Include user drag interaction offset\n      const dragOffset = isVertical.value ? dragged.y : dragged.x\n\n      const totalOffset = scrolledOffset + dragOffset\n\n      return `translate${translateAxis}(${totalOffset}px)`\n    })\n\n    const trackStyle = computed(() => ({\n      transform: config.slideEffect === 'slide' ? trackTransform.value : undefined,\n      gap: config.gap > 0 ? `${config.gap}px` : undefined,\n      '--vc-trk-transition-duration': isSliding.value\n        ? `${config.transition}ms`\n        : undefined,\n      '--vc-trk-height': trackHeight.value,\n      '--vc-trk-cloned-offset': `${clonedSlidesOffset.value}px`,\n    }))\n\n    return () => {\n      const slotSlides = slots.default || slots.slides\n      const outputSlides = slotSlides?.(data) || []\n\n      const { before, after } = clonedSlidesCount.value\n      const slidesBefore = createCloneSlides({\n        slides,\n        position: 'before',\n        toShow: before,\n      })\n\n      const slidesAfter = createCloneSlides({\n        slides,\n        position: 'after',\n        toShow: after,\n      })\n\n      const output = [...slidesBefore, ...outputSlides, ...slidesAfter]\n\n      if (!config.enabled || !output.length) {\n        return h(\n          'section',\n          {\n            ref: root,\n            class: ['carousel', 'is-disabled'],\n          },\n          output\n        )\n      }\n\n      const addonsElements = slots.addons?.(data) || []\n\n      const trackEl = h(\n        'ol',\n        {\n          class: 'carousel__track',\n          style: trackStyle.value,\n          onMousedownCapture: config.mouseDrag ? handleDragStart : null,\n          onTouchstartPassiveCapture: config.touchDrag ? handleDragStart : null,\n        },\n        output\n      )\n      const viewPortEl = h('div', { class: 'carousel__viewport', ref: viewport }, trackEl)\n\n      return h(\n        'section',\n        {\n          ref: root,\n          class: [\n            'carousel',\n            `is-${normalizedDir.value}`,\n            `is-effect-${config.slideEffect}`,\n            {\n              'is-vertical': isVertical.value,\n              'is-sliding': isSliding.value,\n              'is-dragging': isDragging.value,\n              'is-hover': isHover.value,\n            },\n          ],\n          dir: normalizedDir.value,\n          'aria-label': config.i18n['ariaGallery'],\n          tabindex: '0',\n          onFocus: handleFocus,\n          onBlur: handleBlur,\n          onMouseenter: handleMouseEnter,\n          onMouseleave: handleMouseLeave,\n        },\n        [viewPortEl, addonsElements, h(ARIAComponent)]\n      )\n    }\n  },\n})\n","\n/** Useful function to destructure props without triggering reactivity for certain keys */\nexport function except<Obj extends object, Keys extends string>(obj: Obj, keys: Keys[]): Omit<Obj, Keys> {\n  return (Object.keys(obj).filter((k) => !(keys as string[]).includes(k)) as Array<Exclude<keyof Obj, Keys>>)\n    .reduce((acc, key) => (acc[key] = obj[key], acc), {} as Omit<Obj, Keys>)\n}","import { CarouselConfig } from '@/shared'\n\ntype GetMaxSlideIndexArgs = {\n  config: Partial<CarouselConfig>\n  slidesCount: number\n}\n\n/**\n * Determines the maximum slide index based on the configuration.\n *\n * @param {Args} args - The carousel configuration and slide count.\n * @returns {number} The maximum slide index.\n */\nexport function getMaxSlideIndex({ config, slidesCount }: GetMaxSlideIndexArgs): number {\n  const { snapAlign = 'center', wrapAround, itemsToShow = 1 } = config\n\n  // Map snapAlign values to calculation logic\n  function snapAlignCalculations() {\n    // If wrapAround is enabled, fallback to default which is the last slide\n    switch (wrapAround ? '' : snapAlign) {\n      case 'start':\n        return Math.ceil(slidesCount - itemsToShow)\n      case 'center':\n      case 'center-odd':\n        return slidesCount - Math.ceil((itemsToShow - 0.5) / 2)\n      case 'center-even':\n        return slidesCount - Math.ceil(itemsToShow / 2)\n      case 'end':\n      default:\n        return Math.ceil(slidesCount - 1)\n    }\n  }\n\n  // Return the result ensuring it's non-negative\n  return Math.max(snapAlignCalculations(), 0)\n}\n","import { CarouselConfig } from '@/shared'\nimport { calculateOffset } from '@/utils/getScrolledIndex'\n\ntype GetMinSlideIndexArgs = {\n  config: Partial<CarouselConfig>\n  slidesCount: number\n}\n\n/**\n * Determines the minimum slide index based on the configuration.\n *\n * @param {GetMinSlideIndexArgs} args - The carousel configuration and slide count.\n * @returns {number} The minimum slide index.\n */\nexport function getMinSlideIndex({ config, slidesCount }: GetMinSlideIndexArgs): number {\n  const { snapAlign = 'center', wrapAround, itemsToShow = 1 } = config\n\n  // If wrapAround is enabled or itemsToShow exceeds slidesCount, the minimum index is always 0\n  if (wrapAround || itemsToShow > slidesCount) {\n    return 0\n  }\n\n  // Return the calculated offset or default to 0 for invalid snapAlign values\n  return Math.max(0, Math.floor(calculateOffset(snapAlign, itemsToShow)))\n}\n","export function getTransformValues(el: HTMLElement) {\n  const { transform } = window.getComputedStyle(el)\n\n  //add sanity check\n  return transform\n    .split(/[(,)]/)\n    .slice(1, -1)\n    .map((v) => parseFloat(v))\n}\n","interface DragParams {\n  isVertical: boolean\n  isReversed: boolean\n  dragged: { x: number; y: number }\n  effectiveSlideSize: number\n}\n\n/**\n * Calculates the number of slides to move based on drag movement\n * @param params Configuration parameters for drag calculation\n * @returns Number of slides to move (positive or negative)\n */\nexport function getDraggedSlidesCount(params: DragParams): number {\n  const { isVertical, isReversed, dragged, effectiveSlideSize } = params\n\n  // Get drag value based on direction\n  const dragValue = isVertical ? dragged.y : dragged.x\n\n  // If no drag, return +0 explicitly\n  if (dragValue === 0) return 0\n\n  const slidesDragged = Math.round(dragValue / effectiveSlideSize)\n\n  return isReversed ? slidesDragged : -slidesDragged\n}\n","export enum IconName {\n  arrowUp = 'arrowUp',\n  arrowDown = 'arrowDown',\n  arrowRight = 'arrowRight',\n  arrowLeft = 'arrowLeft',\n}\n\nexport type IconNameValue = `${IconName}`\n\nexport interface IconProps {\n  title?: string\n  name: IconNameValue\n}\n","import { defineComponent, h, inject, PropType } from 'vue'\n\nimport { DEFAULT_CONFIG, injectCarousel } from '@/shared'\n\nimport { IconName, IconNameValue, IconProps } from './Icon.types'\n\nfunction isIconName(candidate: string): candidate is IconName {\n  return candidate in IconName\n}\n\nconst iconI18n = <Name extends IconNameValue>(name: Name) =>\n  `icon${name.charAt(0).toUpperCase() + name.slice(1)}` as `icon${Capitalize<Name>}`\n\nconst validateIconName = (value: IconNameValue) => {\n  return value && isIconName(value)\n}\n\nexport const icons = {\n  arrowUp: 'M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6-6 6z',\n  arrowDown: 'M7.41 8.59L12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z',\n  arrowRight: 'M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z',\n  arrowLeft: 'M15.41 16.59L10.83 12l4.58-4.59L14 6l-6 6 6 6 1.41-1.41z',\n}\n\nexport const Icon = defineComponent<IconProps>({\n  props: {\n    name: {\n      type: String as PropType<IconNameValue>,\n      required: true,\n      validator: validateIconName,\n    },\n    title: {\n      type: String,\n      default: (props: { name: IconNameValue }) =>\n        props.name ? DEFAULT_CONFIG.i18n[iconI18n(props.name)] : '',\n    },\n  },\n  setup(props) {\n    const carousel = inject(injectCarousel, null)\n\n    return () => {\n      const iconName = props.name\n      if (!iconName || !validateIconName(iconName)) return\n\n      const path = icons[iconName]\n      const pathEl = h('path', { d: path })\n\n      const iconTitle: string =\n        carousel?.config.i18n[iconI18n(iconName)] || props.title!\n\n      const titleEl = h('title', iconTitle)\n\n      return h(\n        'svg',\n        {\n          class: 'carousel__icon',\n          viewBox: '0 0 24 24',\n          role: 'img',\n          'aria-label': iconTitle,\n        },\n        [titleEl, pathEl]\n      )\n    }\n  },\n})\n","import { inject, h, defineComponent, computed } from 'vue'\n\nimport { NormalizedDir, injectCarousel } from '@/shared'\n\nimport { Icon, IconNameValue } from '../Icon'\n\nimport { NavigationProps } from './Navigation.types'\n\nexport const Navigation = defineComponent<NavigationProps>({\n  name: 'CarouselNavigation',\n  inheritAttrs: false,\n  setup(props, { slots, attrs }) {\n    const carousel = inject(injectCarousel)\n    if (!carousel) {\n      return () => '' // Don't render, let vue warn about the missing provide\n    }\n    const { next: slotNext, prev: slotPrev } = slots\n\n    const getPrevIcon = () => {\n      const directionIcons: Record<NormalizedDir, IconNameValue> = {\n        ltr: 'arrowLeft',\n        rtl: 'arrowRight',\n        ttb: 'arrowUp',\n        btt: 'arrowDown',\n      }\n\n      return directionIcons[carousel.normalizedDir]\n    }\n    const getNextIcon = () => {\n      const directionIcons: Record<NormalizedDir, IconNameValue> = {\n        ltr: 'arrowRight',\n        rtl: 'arrowLeft',\n        ttb: 'arrowDown',\n        btt: 'arrowUp',\n      }\n\n      return directionIcons[carousel.normalizedDir]\n    }\n\n    const prevDisabled = computed(() => !carousel.config.wrapAround && carousel.currentSlide <= carousel.minSlide)\n    const nextDisabled = computed(() => !carousel.config.wrapAround && carousel.currentSlide >= carousel.maxSlide)\n\n    return () => {\n      const { i18n } = carousel.config\n      const prevButton = h(\n        'button',\n        {\n          type: 'button',\n          disabled: prevDisabled.value,\n          'aria-label': i18n['ariaPreviousSlide'],\n          title: i18n['ariaPreviousSlide'],\n          onClick: carousel.nav.prev,\n          ...attrs,\n          class: [\n            'carousel__prev',\n            {'carousel__prev--disabled': prevDisabled.value},\n            attrs.class,\n          ],\n        },\n        slotPrev?.() || h(Icon, { name: getPrevIcon() })\n      )\n      const nextButton = h(\n        'button',\n        {\n          type: 'button',\n          disabled: nextDisabled.value,\n          'aria-label': i18n['ariaNextSlide'],\n          title: i18n['ariaNextSlide'],\n          onClick: carousel.nav.next,\n          ...attrs,\n          class: [\n            'carousel__next',\n            {'carousel__next--disabled': nextDisabled.value},\n            attrs.class,\n          ],\n        },\n        slotNext?.() || h(Icon, { name: getNextIcon() })\n      )\n\n      return [prevButton, nextButton]\n    }\n  },\n})\n","import { inject, h, VNode, defineComponent, computed } from 'vue'\n\nimport { injectCarousel } from '@/shared'\nimport { mapNumberToRange, i18nFormatter, calculateOffset } from '@/utils'\n\nimport { PaginationProps } from './Pagination.types'\n\nexport const Pagination = defineComponent<PaginationProps>({\n  name: 'CarouselPagination',\n  props: {\n    disableOnClick: {\n      type: Boolean,\n    },\n    paginateByItemsToShow: {\n      type: Boolean,\n    },\n  },\n  setup(props) {\n    const carousel = inject(injectCarousel)\n\n    if (!carousel) {\n      return () => '' // Don't render, let vue warn about the missing provide\n    }\n\n    const offset = computed(() =>\n      calculateOffset(carousel.config.snapAlign, carousel.config.itemsToShow)\n    )\n    const isPaginated = computed(\n      () => props.paginateByItemsToShow && carousel.config.itemsToShow > 1\n    )\n    const currentPage = computed(() =>\n      Math.ceil((carousel.activeSlide - offset.value) / carousel.config.itemsToShow)\n    )\n    const pageCount = computed(() =>\n      Math.ceil(carousel.slidesCount / carousel.config.itemsToShow)\n    )\n\n    const isActive = (slide: number): boolean =>\n      mapNumberToRange(\n        isPaginated.value\n          ? {\n              val: currentPage.value,\n              max: pageCount.value - 1,\n              min: 0,\n            }\n          : {\n              val: carousel.activeSlide,\n              max: carousel.maxSlide,\n              min: carousel.minSlide,\n            }\n      ) === slide\n\n    return () => {\n      const children: Array<VNode> = []\n\n      for (\n        let slide = isPaginated.value ? 0 : carousel.minSlide;\n        slide <= (isPaginated.value ? pageCount.value - 1 : carousel.maxSlide);\n        slide++\n      ) {\n        const buttonLabel = i18nFormatter(\n          carousel.config.i18n[\n            isPaginated.value ? 'ariaNavigateToPage' : 'ariaNavigateToSlide'\n          ],\n          {\n            slideNumber: slide + 1,\n          }\n        )\n        const active = isActive(slide)\n        const button = h('button', {\n          type: 'button',\n          class: {\n            'carousel__pagination-button': true,\n            'carousel__pagination-button--active': active,\n          },\n          'aria-label': buttonLabel,\n          'aria-pressed': active,\n          'aria-controls': carousel.slides[slide]?.exposed?.id,\n          title: buttonLabel,\n          disabled: props.disableOnClick,\n          onClick: () =>\n            carousel.nav.slideTo(\n              isPaginated.value\n                ? slide * carousel.config.itemsToShow + offset.value\n                : slide\n            ),\n        })\n        const item = h('li', { class: 'carousel__pagination-item', key: slide }, button)\n        children.push(item)\n      }\n\n      return h('ol', { class: 'carousel__pagination' }, children)\n    }\n  },\n})\n","import {\n  defineComponent,\n  inject,\n  h,\n  SetupContext,\n  computed,\n  ComputedRef,\n  getCurrentInstance,\n  onUnmounted,\n  provide,\n  useId,\n  onMounted,\n  onUpdated,\n  DeepReadonly,\n  ref,\n} from 'vue'\n\nimport { injectCarousel } from '@/shared'\nimport { disableChildrenTabbing } from '@/utils'\n\nimport { SlideProps } from './Slide.types'\n\nexport const Slide = defineComponent({\n  name: 'CarouselSlide',\n  props: {\n    isClone: {\n      type: Boolean,\n      default: false,\n    },\n    id: {\n      type: String,\n      default: (props: { isClone?: boolean }) => (props.isClone ? undefined : useId()),\n    },\n    index: {\n      type: Number,\n      default: undefined,\n    },\n  },\n  setup(props: DeepReadonly<SlideProps>, { slots, expose }: SetupContext) {\n    const carousel = inject(injectCarousel)\n    provide(injectCarousel, undefined) // Don't provide for nested slides\n\n    if (!carousel) {\n      return () => '' // Don't render, let vue warn about the missing provide\n    }\n\n    const currentIndex = ref(props.index)\n\n    const setIndex = (newIndex: number) => {\n      currentIndex.value = newIndex\n    }\n\n    expose({\n      id: props.id,\n      setIndex,\n    })\n\n    const isActive: ComputedRef<boolean> = computed(\n      () => currentIndex.value === carousel.activeSlide\n    )\n    const isPrev: ComputedRef<boolean> = computed(\n      () => currentIndex.value === carousel.activeSlide - 1\n    )\n    const isNext: ComputedRef<boolean> = computed(\n      () => currentIndex.value === carousel.activeSlide + 1\n    )\n    const isVisible: ComputedRef<boolean> = computed(\n      () =>\n        currentIndex.value >= Math.floor(carousel.scrolledIndex) &&\n        currentIndex.value <\n          Math.ceil(carousel.scrolledIndex) + carousel.config.itemsToShow\n    )\n\n    const slideStyle = computed(() => {\n      const dimension =\n        carousel.config.gap > 0 && carousel.config.itemsToShow > 1\n          ? `calc(${100 / carousel.config.itemsToShow}% - ${\n              (carousel.config.gap * (carousel.config.itemsToShow - 1)) /\n              carousel.config.itemsToShow\n            }px)`\n          : `${100 / carousel.config.itemsToShow}%`\n\n      return carousel.isVertical ? { height: dimension } : { width: dimension }\n    })\n\n    const instance = getCurrentInstance()!\n\n    carousel.slideRegistry.registerSlide(instance, props.index)\n    onUnmounted(() => {\n      carousel.slideRegistry.unregisterSlide(instance)\n    })\n\n    if (props.isClone) {\n      // Prevent cloned slides from being focusable\n      onMounted(() => {\n        disableChildrenTabbing(instance.vnode)\n      })\n      onUpdated(() => {\n        disableChildrenTabbing(instance.vnode)\n      })\n    }\n\n    return () => {\n      if (!carousel.config.enabled) {\n        return slots.default?.()\n      }\n\n      return h(\n        'li',\n        {\n          style: slideStyle.value,\n          class: {\n            carousel__slide: true,\n            'carousel__slide--clone': props.isClone,\n            'carousel__slide--visible': isVisible.value,\n            'carousel__slide--active': isActive.value,\n            'carousel__slide--prev': isPrev.value,\n            'carousel__slide--next': isNext.value,\n            'carousel__slide--sliding': carousel.isSliding,\n          },\n          onFocusin: () => {\n            // Prevent the viewport being scrolled by the focus\n            if (carousel.viewport) {\n              carousel.viewport.scrollLeft = 0\n            }\n            carousel.nav.slideTo(currentIndex.value)\n          },\n          id: props.isClone ? undefined : props.id,\n          'aria-hidden': props.isClone || undefined,\n        },\n        slots.default?.({\n          isActive: isActive.value,\n          isClone: props.isClone,\n          isPrev: isPrev.value,\n          isNext: isNext.value,\n          isSliding: carousel.isSliding,\n          isVisible: isVisible.value,\n        })\n      )\n    }\n  },\n})\n"],"names":["injectCarousel","Symbol","SNAP_ALIGN_OPTIONS","SLIDE_EFFECTS","BREAKPOINT_MODE_OPTIONS","DIR_OPTIONS","I18N_DEFAULT_CONFIG","ariaNextSlide","ariaPreviousSlide","ariaNavigateToSlide","ariaNavigateToPage","ariaGallery","itemXofY","iconArrowUp","iconArrowDown","iconArrowRight","iconArrowLeft","DIR_MAP","NORMALIZED_DIR_OPTIONS","Object","values","DEFAULT_CONFIG","enabled","itemsToShow","itemsToScroll","modelValue","transition","autoplay","gap","height","wrapAround","pauseAutoplayOnHover","mouseDrag","touchDrag","snapAlign","dir","breakpointMode","breakpoints","undefined","i18n","ignoreAnimations","slideEffect","createSlideRegistry","emit","slides","shallowReactive","clonedSlides","updateSlideIndexes","startIndex","slice","forEach","slide","offset","_a","exposed","setIndex","index","registerSlide","props","isClone","push","slideIndex","length","splice","unregisterSlide","indexOf","cleanup","getSlides","getClonedSlides","getNumberInRange","val","max","min","Math","isNaN","calculateOffset","mapNumberToRange","mod","i18nFormatter","string","entries","reduce","acc","key","value","replace","String","throttle","fn","ms","isThrottled","start","frameId","throttled","args","step","requestAnimationFrame","time","cancel","cancelAnimationFrame","createCloneSlides","position","toShow","clones","isBefore","end","i","id","vnode","clone","cloneVNode","el","disableChildrenTabbing","node","Element","elements","querySelectorAll","HTMLElement","hasAttribute","getAttribute","setAttribute","ARIA","defineComponent","name","setup","carousel","inject","h","class","config","currentSlide","slidesCount","carouselProps","default","type","Boolean","Number","validator","includes","Array","Carousel","emits","slots","expose","slideRegistry","computed","root","ref","viewport","slideSize","fallbackConfig","assign","obj","keys","filter","k","currentSlideIndex","activeSlideIndex","watch","prevSlideIndex","middleSlideIndex","ceil","maxSlideIndex","snapAlignCalculations","getMaxSlideIndex","minSlideIndex","floor","getMinSlideIndex","autoplayTimer","transitionTimer","resizeObserver","effectiveSlideSize","normalizedDir","isReversed","isVertical","updateBreakpointsConfig","mounted","widthSource","getBoundingClientRect","width","window","innerWidth","breakpointsArray","map","sort","a","b","newConfig","some","breakpoint","handleResize","updateSlidesData","updateSlideSize","totalGap","transformElements","Set","multiplierWidth","transformArr","transform","getComputedStyle","split","v","parseFloat","getTransformValues","parseInt","isArray","animationInterval","watchEffect","setAnimationInterval","event","target","contains","animationName","add","stepAnimation","finishAnimation","delete","size","document","addEventListener","removeEventListener","onMounted","initAutoplay","ResizeObserver","observe","onBeforeUnmount","clearTimeout","clearInterval","disconnect","handleBlur","isTouch","startPosition","x","y","dragged","reactive","isHover","isDragging","handleMouseEnter","handleMouseLeave","handleArrowKeys","ctrlKey","endsWith","nav","next","prev","handleFocus","handleDragStart","targetTagName","tagName","isSliding","preventDefault","button","touches","clientX","clientY","moveEvent","endEvent","handleDragging","passive","handleDragEnd","currentX","currentY","draggedSlides","params","dragValue","slidesDragged","round","getDraggedSlidesCount","deltaX","deltaY","preventClick","e","slideTo","setInterval","stopAutoplay","resetAutoplay","skipTransition","targetIndex","mappedIndex","slidingToIndex","modelWatcher","pause","setTimeout","resume","scrolledIndex","getScrolledIndex","provided","activeSlide","maxSlide","minSlide","provide","deep","data","middleSlide","restartCarousel","trackHeight","toString","clonedSlidesCount","before","after","slidesToClone","clonedSlidesOffset","trackTransform","directionMultiplier","trackStyle","slotSlides","outputSlides","output","addonsElements","addons","call","trackEl","style","onMousedownCapture","onTouchstartPassiveCapture","viewPortEl","tabindex","onFocus","onBlur","onMouseenter","onMouseleave","ARIAComponent","IconName","iconI18n","charAt","toUpperCase","validateIconName","icons","arrowUp","arrowDown","arrowRight","arrowLeft","Icon","required","title","iconName","path","pathEl","d","iconTitle","titleEl","viewBox","role","Navigation","inheritAttrs","attrs","slotNext","slotPrev","prevDisabled","nextDisabled","disabled","onClick","ltr","rtl","ttb","btt","Pagination","disableOnClick","paginateByItemsToShow","isPaginated","currentPage","pageCount","isActive","children","buttonLabel","slideNumber","active","_b","item","Slide","useId","currentIndex","newIndex","isPrev","isNext","isVisible","slideStyle","dimension","instance","getCurrentInstance","onUnmounted","onUpdated","carousel__slide","onFocusin","scrollLeft"],"mappings":"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"}