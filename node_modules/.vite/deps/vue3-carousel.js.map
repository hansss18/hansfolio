{
  "version": 3,
  "sources": ["../../vue3-carousel/src/shared/injectSymbols.ts", "../../vue3-carousel/src/shared/constants.ts", "../../vue3-carousel/src/shared/slideRegistry.ts", "../../vue3-carousel/src/utils/getNumberInRange.ts", "../../vue3-carousel/src/utils/getScrolledIndex.ts", "../../vue3-carousel/src/utils/getMinSlideIndex.ts", "../../vue3-carousel/src/utils/getMaxSlideIndex.ts", "../../vue3-carousel/src/utils/mapNumberToRange.ts", "../../vue3-carousel/src/utils/i18nFormatter.ts", "../../vue3-carousel/src/utils/throttle.ts", "../../vue3-carousel/src/utils/except.ts", "../../vue3-carousel/src/utils/getTransformValues.ts", "../../vue3-carousel/src/utils/createCloneSlides.ts", "../../vue3-carousel/src/utils/disableChildrenTabbing.ts", "../../vue3-carousel/src/utils/getDraggedSlidesCount.ts", "../../vue3-carousel/src/components/ARIA/ARIA.ts", "../../vue3-carousel/src/components/Carousel/carouselProps.ts", "../../vue3-carousel/src/components/Carousel/Carousel.ts", "../../vue3-carousel/src/components/Icon/Icon.types.ts", "../../vue3-carousel/src/components/Icon/Icon.ts", "../../vue3-carousel/src/components/Navigation/Navigation.ts", "../../vue3-carousel/src/components/Pagination/Pagination.ts", "../../vue3-carousel/src/components/Slide/Slide.ts"],
  "sourcesContent": ["import { InjectionKey } from 'vue'\n\nimport { InjectedCarousel } from '@/components/Carousel'\n\n// Use a symbol for inject provide to avoid any kind of collision with another lib\n// https://vuejs.org/guide/components/provide-inject#working-with-symbol-keys\nexport const injectCarousel = Symbol('carousel') as InjectionKey<\n  InjectedCarousel | undefined\n>\n", "import { CarouselConfig } from './types'\n\nexport const SNAP_ALIGN_OPTIONS = [\n  'center',\n  'start',\n  'end',\n  'center-even',\n  'center-odd',\n] as const\nexport const SLIDE_EFFECTS = ['slide', 'fade'] as const\nexport const BREAKPOINT_MODE_OPTIONS = ['viewport', 'carousel'] as const\nexport const DIR_OPTIONS = [\n  'ltr',\n  'left-to-right',\n  'rtl',\n  'right-to-left',\n  'ttb',\n  'top-to-bottom',\n  'btt',\n  'bottom-to-top',\n] as const\nexport const I18N_DEFAULT_CONFIG = {\n  ariaNextSlide: 'Navigate to next slide',\n  ariaPreviousSlide: 'Navigate to previous slide',\n  ariaNavigateToSlide: 'Navigate to slide {slideNumber}',\n  ariaNavigateToPage: 'Navigate to page {slideNumber}',\n  ariaGallery: 'Gallery',\n  itemXofY: 'Item {currentSlide} of {slidesCount}',\n  iconArrowUp: 'Arrow pointing upwards',\n  iconArrowDown: 'Arrow pointing downwards',\n  iconArrowRight: 'Arrow pointing to the right',\n  iconArrowLeft: 'Arrow pointing to the left',\n} as const\n\nexport const DIR_MAP = {\n  'left-to-right': 'ltr',\n  'right-to-left': 'rtl',\n  'top-to-bottom': 'ttb',\n  'bottom-to-top': 'btt',\n} as const\n\nexport const NORMALIZED_DIR_OPTIONS = Object.values(DIR_MAP)\n\nexport const DEFAULT_CONFIG: CarouselConfig = {\n  enabled: true,\n  itemsToShow: 1,\n  itemsToScroll: 1,\n  modelValue: 0,\n  transition: 300,\n  autoplay: 0,\n  gap: 0,\n  height: 'auto',\n  wrapAround: false,\n  pauseAutoplayOnHover: false,\n  mouseDrag: true,\n  touchDrag: true,\n  snapAlign: SNAP_ALIGN_OPTIONS[0],\n  dir: DIR_OPTIONS[0],\n  breakpointMode: BREAKPOINT_MODE_OPTIONS[0],\n  breakpoints: undefined,\n  i18n: I18N_DEFAULT_CONFIG,\n  ignoreAnimations: false,\n  slideEffect: SLIDE_EFFECTS[0],\n}\n", "import { ComponentInternalInstance, EmitFn, shallowReactive } from 'vue'\n\nconst createSlideRegistry = (emit: EmitFn) => {\n  const slides = shallowReactive<Array<ComponentInternalInstance>>([])\n  const clonedSlides = shallowReactive<Array<ComponentInternalInstance>>([])\n\n  const updateSlideIndexes = (startIndex?: number) => {\n    if (startIndex !== undefined) {\n      slides.slice(startIndex).forEach((slide, offset) => {\n        slide.exposed?.setIndex(startIndex + offset)\n      })\n    } else {\n      slides.forEach((slide, index) => {\n        slide.exposed?.setIndex(index)\n      })\n    }\n  }\n\n  return {\n    registerSlide: (slide: ComponentInternalInstance, index?: number) => {\n      if (!slide) return\n\n      if (slide.props.isClone) {\n        clonedSlides.push(slide)\n        return\n      }\n\n      const slideIndex = index ?? slides.length\n      slides.splice(slideIndex, 0, slide)\n      updateSlideIndexes(slideIndex)\n      emit('slide-registered', { slide, index: slideIndex })\n    },\n\n    unregisterSlide: (slide: ComponentInternalInstance) => {\n      const slideIndex = slides.indexOf(slide)\n      if (slideIndex === -1) return\n\n      emit('slide-unregistered', { slide, index: slideIndex })\n\n      slides.splice(slideIndex, 1)\n      updateSlideIndexes(slideIndex)\n    },\n\n    cleanup: () => {\n      slides.splice(0, slides.length)\n    },\n\n    getSlides: () => slides,\n    getClonedSlides: () => clonedSlides,\n  }\n}\n\nexport type SlideRegistry = ReturnType<typeof createSlideRegistry>\n\nexport { createSlideRegistry }\n", "type GetNumberInRangeArgs = {\n  val: number\n  max: number\n  min: number\n}\n\nexport function getNumberInRange({ val, max, min }: GetNumberInRangeArgs): number {\n  if (max < min) {\n    return val\n  }\n  return Math.min(Math.max(val, isNaN(min) ? val : min), isNaN(max) ? val : max)\n}\n", "import { CarouselConfig } from '@/shared'\n\nimport { getNumberInRange } from './getNumberInRange'\n\ntype GetScrolledIndexArgs = {\n  config: Pick<CarouselConfig, 'itemsToShow' | 'wrapAround' | 'snapAlign'>\n  currentSlide: number\n  slidesCount: number\n}\n\nexport const calculateOffset = (snapAlign: string, itemsToShow: number): number => {\n  switch (snapAlign) {\n    default:\n    case 'start':\n      return 0\n    case 'center':\n      return (itemsToShow - 1) / 2\n    case 'center-odd':\n      return (itemsToShow - 1) / 2\n    case 'center-even':\n      return (itemsToShow - 2) / 2\n    case 'end':\n      return itemsToShow - 1\n  }\n}\n\nexport function getScrolledIndex({\n  config,\n  currentSlide,\n  slidesCount,\n}: GetScrolledIndexArgs): number {\n  const { snapAlign = 'center', wrapAround, itemsToShow = 1 } = config\n\n  // Calculate the offset based on snapAlign\n  const offset = calculateOffset(snapAlign, itemsToShow)\n\n  // Compute the index with or without wrapAround\n  if (wrapAround) {\n    return currentSlide - offset\n  }\n  return getNumberInRange({\n    val: currentSlide - offset,\n    max: slidesCount - itemsToShow,\n    min: 0,\n  })\n}\n", "import { CarouselConfig } from '@/shared'\nimport { calculateOffset } from '@/utils/getScrolledIndex'\n\ntype GetMinSlideIndexArgs = {\n  config: Partial<CarouselConfig>\n  slidesCount: number\n}\n\n/**\n * Determines the minimum slide index based on the configuration.\n *\n * @param {GetMinSlideIndexArgs} args - The carousel configuration and slide count.\n * @returns {number} The minimum slide index.\n */\nexport function getMinSlideIndex({ config, slidesCount }: GetMinSlideIndexArgs): number {\n  const { snapAlign = 'center', wrapAround, itemsToShow = 1 } = config\n\n  // If wrapAround is enabled or itemsToShow exceeds slidesCount, the minimum index is always 0\n  if (wrapAround || itemsToShow > slidesCount) {\n    return 0\n  }\n\n  // Return the calculated offset or default to 0 for invalid snapAlign values\n  return Math.max(0, Math.floor(calculateOffset(snapAlign, itemsToShow)))\n}\n", "import { CarouselConfig } from '@/shared'\n\ntype GetMaxSlideIndexArgs = {\n  config: Partial<CarouselConfig>\n  slidesCount: number\n}\n\n/**\n * Determines the maximum slide index based on the configuration.\n *\n * @param {Args} args - The carousel configuration and slide count.\n * @returns {number} The maximum slide index.\n */\nexport function getMaxSlideIndex({ config, slidesCount }: GetMaxSlideIndexArgs): number {\n  const { snapAlign = 'center', wrapAround, itemsToShow = 1 } = config\n\n  // Map snapAlign values to calculation logic\n  function snapAlignCalculations() {\n    // If wrapAround is enabled, fallback to default which is the last slide\n    switch (wrapAround ? '' : snapAlign) {\n      case 'start':\n        return Math.ceil(slidesCount - itemsToShow)\n      case 'center':\n      case 'center-odd':\n        return slidesCount - Math.ceil((itemsToShow - 0.5) / 2)\n      case 'center-even':\n        return slidesCount - Math.ceil(itemsToShow / 2)\n      case 'end':\n      default:\n        return Math.ceil(slidesCount - 1)\n    }\n  }\n\n  // Return the result ensuring it's non-negative\n  return Math.max(snapAlignCalculations(), 0)\n}\n", "type MapNumberToRangeArgs = {\n  val: number\n  max: number\n  min?: number\n}\n\nexport function mapNumberToRange({ val, max, min = 0 }: MapNumberToRangeArgs): number {\n  const mod = max - min + 1\n  return ((((val - min) % mod) + mod) % mod) + min\n}\n", "export function i18nFormatter(string = '', values = {}) {\n  return Object.entries(values).reduce(\n    (acc, [key, value]) => acc.replace(`{${key}}`, String(value)),\n    string\n  )\n}\n", "/**\n * Returns a throttled version of the function using requestAnimationFrame.\n *\n * @param fn - The function to throttle.\n * @param ms - The number of milliseconds to wait for the throttled function to be called again\n */\nexport function throttle<Args extends Array<unknown>>(\n  fn: (...args: Args) => void,\n  ms = 0\n): { (...args: Args): void; cancel: () => void } {\n  let isThrottled = false\n  let start = 0\n  let frameId: number | null = null\n\n  function throttled(...args: Args) {\n    if (isThrottled) return\n\n    isThrottled = true\n    const step = () => {\n      frameId = requestAnimationFrame((time) => {\n        const elapsed = time - start\n        if (elapsed > ms) {\n          start = time\n          fn(...args)\n          isThrottled = false\n        } else {\n          step()\n        }\n      })\n    }\n    step()\n  }\n\n  throttled.cancel = () => {\n    if (frameId) {\n      cancelAnimationFrame(frameId)\n      frameId = null\n      isThrottled = false\n    }\n  }\n\n  return throttled\n}\n", "\n/** Useful function to destructure props without triggering reactivity for certain keys */\nexport function except<Obj extends object, Keys extends string>(obj: Obj, keys: Keys[]): Omit<Obj, Keys> {\n  return (Object.keys(obj).filter((k) => !(keys as string[]).includes(k)) as Array<Exclude<keyof Obj, Keys>>)\n    .reduce((acc, key) => (acc[key] = obj[key], acc), {} as Omit<Obj, Keys>)\n}", "export function getTransformValues(el: HTMLElement) {\n  const { transform } = window.getComputedStyle(el)\n\n  //add sanity check\n  return transform\n    .split(/[(,)]/)\n    .slice(1, -1)\n    .map((v) => parseFloat(v))\n}\n", "import { cloneVNode, ComponentInternalInstance, VNode } from 'vue'\n\ntype CreateCloneSlidesArgs = {\n  slides: Array<ComponentInternalInstance>\n  position: 'before' | 'after'\n  toShow: number\n}\n\nexport function createCloneSlides({ slides, position, toShow }: CreateCloneSlidesArgs) {\n  const clones: VNode[] = []\n  const isBefore = position === 'before'\n  const start = isBefore ? -toShow : 0\n  const end = isBefore ? 0 : toShow\n\n  if (slides.length <= 0) {\n    return clones\n  }\n\n  for (let i = start; i < end; i++) {\n    const index = isBefore ? i : i + slides.length\n    const props = {\n      index,\n      isClone: true,\n      id: undefined, // Make sure we don't duplicate the id which would be invalid html\n      key: `clone-${position}-${i}`,\n    }\n    const vnode = slides[((i % slides.length) + slides.length) % slides.length].vnode\n    const clone = cloneVNode(vnode, props)\n    clone.el = null\n    clones.push(clone)\n  }\n\n  return clones\n}\n", "import { VNode } from 'vue'\n\nconst FOCUSABLE_ELEMENTS_SELECTOR =\n  'a[href], button, input, textarea, select, details, [tabindex]:not([tabindex=\"-1\"])'\n\n/**\n * Disables keyboard tab navigation for all focusable child elements\n * @param node Vue virtual node containing the elements to disable\n */\nexport function disableChildrenTabbing(node: VNode) {\n  if (!node.el || !(node.el instanceof Element)) {\n    return\n  }\n\n  const elements = node.el.querySelectorAll(FOCUSABLE_ELEMENTS_SELECTOR)\n\n  for (const el of elements) {\n    if (\n      el instanceof HTMLElement &&\n      !el.hasAttribute('disabled') &&\n      el.getAttribute('aria-hidden') !== 'true'\n    ) {\n      el.setAttribute('tabindex', '-1')\n    }\n  }\n}\n", "interface DragParams {\n  isVertical: boolean\n  isReversed: boolean\n  dragged: { x: number; y: number }\n  effectiveSlideSize: number\n}\n\n/**\n * Calculates the number of slides to move based on drag movement\n * @param params Configuration parameters for drag calculation\n * @returns Number of slides to move (positive or negative)\n */\nexport function getDraggedSlidesCount(params: DragParams): number {\n  const { isVertical, isReversed, dragged, effectiveSlideSize } = params\n\n  // Get drag value based on direction\n  const dragValue = isVertical ? dragged.y : dragged.x\n\n  // If no drag, return +0 explicitly\n  if (dragValue === 0) return 0\n\n  const slidesDragged = Math.round(dragValue / effectiveSlideSize)\n\n  return isReversed ? slidesDragged : -slidesDragged\n}\n", "import { defineComponent, inject, h } from 'vue'\n\nimport { injectCarousel } from '@/shared'\nimport { i18nFormatter } from '@/utils'\n\nexport const ARIA = defineComponent({\n  name: 'CarouselAria',\n  setup() {\n    const carousel = inject(injectCarousel)\n\n    if (!carousel) {\n      return () => ''\n    }\n\n    return () =>\n      h(\n        'div',\n        {\n          class: ['carousel__liveregion', 'carousel__sr-only'],\n          'aria-live': 'polite',\n          'aria-atomic': 'true',\n        },\n        i18nFormatter(carousel.config.i18n['itemXofY'], {\n          currentSlide: carousel.currentSlide + 1,\n          slidesCount: carousel.slidesCount,\n        })\n      )\n  },\n})\n", "import { PropType } from 'vue'\n\nimport {\n  BREAKPOINT_MODE_OPTIONS,\n  DEFAULT_CONFIG,\n  DIR_OPTIONS,\n  SLIDE_EFFECTS,\n  SNAP_ALIGN_OPTIONS,\n} from '@/shared'\n\nimport type {\n  BreakpointMode,\n  Dir,\n  SnapAlign,\n  CarouselConfig,\n  SlideEffect,\n} from '@/shared'\n\nexport const carouselProps = {\n  // enable/disable the carousel component\n  enabled: {\n    default: DEFAULT_CONFIG.enabled,\n    type: Boolean,\n  },\n  // count of items to showed per view\n  itemsToShow: {\n    default: DEFAULT_CONFIG.itemsToShow,\n    type: Number,\n  },\n  // count of items to be scrolled\n  itemsToScroll: {\n    default: DEFAULT_CONFIG.itemsToScroll,\n    type: Number,\n  },\n  // control infinite scrolling mode\n  wrapAround: {\n    default: DEFAULT_CONFIG.wrapAround,\n    type: Boolean,\n  },\n  // control the gap between slides\n  gap: {\n    default: DEFAULT_CONFIG.gap,\n    type: Number,\n  },\n  // control the gap between slides\n  height: {\n    default: DEFAULT_CONFIG.height,\n    type: [Number, String],\n  },\n  // control snap position alignment\n  snapAlign: {\n    default: DEFAULT_CONFIG.snapAlign,\n    validator(value: SnapAlign) {\n      return SNAP_ALIGN_OPTIONS.includes(value)\n    },\n  },\n  // sliding transition time in ms\n  transition: {\n    default: DEFAULT_CONFIG.transition,\n    type: Number,\n  },\n  // controls the breakpoint mode relative to the carousel container or the viewport\n  breakpointMode: {\n    default: DEFAULT_CONFIG.breakpointMode,\n    validator(value: BreakpointMode) {\n      return BREAKPOINT_MODE_OPTIONS.includes(value)\n    },\n  },\n  // an object to store breakpoints\n  breakpoints: {\n    default: DEFAULT_CONFIG.breakpoints,\n    type: Object as PropType<CarouselConfig['breakpoints']>,\n  },\n  // time to auto advance slides in ms\n  autoplay: {\n    default: DEFAULT_CONFIG.autoplay,\n    type: Number,\n  },\n  // pause autoplay when mouse hover over the carousel\n  pauseAutoplayOnHover: {\n    default: DEFAULT_CONFIG.pauseAutoplayOnHover,\n    type: Boolean,\n  },\n  // slide number number of initial slide\n  modelValue: {\n    default: undefined,\n    type: Number,\n  },\n  // toggle mouse dragging.\n  mouseDrag: {\n    default: DEFAULT_CONFIG.mouseDrag,\n    type: Boolean,\n  },\n  // toggle mouse dragging.\n  touchDrag: {\n    default: DEFAULT_CONFIG.touchDrag,\n    type: Boolean,\n  },\n  // control snap position alignment\n  dir: {\n    type: String as PropType<Dir>,\n    default: DEFAULT_CONFIG.dir,\n    validator(value: Dir) {\n      // The value must match one of these strings\n      return DIR_OPTIONS.includes(value)\n    },\n  },\n  // aria-labels and additional text labels\n  i18n: {\n    default: DEFAULT_CONFIG.i18n,\n    type: Object as PropType<typeof DEFAULT_CONFIG.i18n>,\n  },\n  ignoreAnimations: {\n    default: false,\n    type: [Array, Boolean, String] as PropType<CarouselConfig['ignoreAnimations']>,\n  },\n  slideEffect: {\n    type: String as PropType<SlideEffect>,\n    default: DEFAULT_CONFIG.slideEffect,\n    validator(value: SlideEffect) {\n      return SLIDE_EFFECTS.includes(value)\n    },\n  },\n}\n", "import {\n  defineComponent,\n  onMounted,\n  onBeforeUnmount,\n  ref,\n  reactive,\n  provide,\n  computed,\n  h,\n  watch,\n  SetupContext,\n  Ref,\n  ComputedRef,\n  watchEffect,\n  shallowReactive,\n} from 'vue'\n\nimport { ARIA as ARIAComponent } from '@/components/ARIA'\nimport {\n  CarouselConfig,\n  DEFAULT_CONFIG,\n  DIR_MAP,\n  NonNormalizedDir,\n  NormalizedDir,\n  injectCarousel,\n  createSlideRegistry,\n} from '@/shared'\nimport {\n  except,\n  throttle,\n  getNumberInRange,\n  getMaxSlideIndex,\n  getMinSlideIndex,\n  mapNumberToRange,\n  getScrolledIndex,\n  getTransformValues,\n  createCloneSlides,\n  getDraggedSlidesCount,\n} from '@/utils'\n\nimport {\n  CarouselData,\n  CarouselExposed,\n  CarouselNav,\n  InjectedCarousel,\n} from './Carousel.types'\nimport { carouselProps } from './carouselProps'\n\nexport const Carousel = defineComponent({\n  name: 'VueCarousel',\n  props: carouselProps,\n  emits: [\n    'init',\n    'drag',\n    'slide-start',\n    'loop',\n    'update:modelValue',\n    'slide-end',\n    'before-init',\n    'slide-registered',\n    'slide-unregistered',\n  ],\n  setup(props: CarouselConfig, { slots, emit, expose }: SetupContext) {\n    const slideRegistry = createSlideRegistry(emit)\n    const slides = slideRegistry.getSlides()\n    const slidesCount = computed(() => slides.length)\n\n    const root: Ref<Element | null> = ref(null)\n    const viewport: Ref<Element | null> = ref(null)\n    const slideSize: Ref<number> = ref(0)\n\n    const fallbackConfig = computed(() => ({\n      ...DEFAULT_CONFIG,\n      // Avoid reactivity tracking in breakpoints and vModel which would trigger unnecessary updates\n      ...except(props, ['breakpoints', 'modelValue']),\n      i18n: { ...DEFAULT_CONFIG.i18n, ...props.i18n },\n    }))\n\n    // current active config\n    const config = shallowReactive<CarouselConfig>({ ...fallbackConfig.value })\n\n    // slides\n    const currentSlideIndex = ref(props.modelValue ?? 0)\n    const activeSlideIndex = ref(currentSlideIndex.value)\n\n    watch(currentSlideIndex, (val) => (activeSlideIndex.value = val))\n    const prevSlideIndex = ref(0)\n    const middleSlideIndex = computed(() => Math.ceil((slidesCount.value - 1) / 2))\n    const maxSlideIndex = computed(() => {\n      return getMaxSlideIndex({ config, slidesCount: slidesCount.value })\n    })\n    const minSlideIndex = computed(() => {\n      return getMinSlideIndex({ config, slidesCount: slidesCount.value })\n    })\n\n    let autoplayTimer: ReturnType<typeof setInterval> | null = null\n    let transitionTimer: ReturnType<typeof setTimeout> | null = null\n    let resizeObserver: ResizeObserver | null = null\n\n    const effectiveSlideSize = computed(() => slideSize.value + config.gap)\n\n    const normalizedDir = computed<NormalizedDir>(() => {\n      const dir = config.dir || 'ltr'\n      return dir in DIR_MAP ? DIR_MAP[dir as NonNormalizedDir] : (dir as NormalizedDir)\n    })\n\n    const isReversed = computed(() => ['rtl', 'btt'].includes(normalizedDir.value))\n    const isVertical = computed(() => ['ttb', 'btt'].includes(normalizedDir.value))\n\n    function updateBreakpointsConfig(): void {\n      if (!mounted.value) {\n        return\n      }\n      // Determine the width source based on the 'breakpointMode' config\n      const widthSource =\n        (fallbackConfig.value.breakpointMode === 'carousel'\n          ? root.value?.getBoundingClientRect().width\n          : typeof window !== 'undefined'\n            ? window.innerWidth\n            : 0) || 0\n\n      const breakpointsArray = Object.keys(props.breakpoints || {})\n        .map((key) => Number(key))\n        .sort((a, b) => +b - +a)\n\n      const newConfig: Partial<CarouselConfig> = {}\n      breakpointsArray.some((breakpoint) => {\n        if (widthSource >= breakpoint) {\n          Object.assign(newConfig, props.breakpoints![breakpoint])\n          if (newConfig.i18n) {\n            Object.assign(\n              newConfig.i18n,\n              fallbackConfig.value.i18n,\n              props.breakpoints![breakpoint].i18n\n            )\n          }\n          return true\n        }\n        return false\n      })\n\n      Object.assign(config, fallbackConfig.value, newConfig)\n    }\n\n    const handleResize = throttle(() => {\n      updateBreakpointsConfig()\n      updateSlidesData()\n      updateSlideSize()\n    })\n\n    const totalGap = computed(() => (config.itemsToShow - 1) * config.gap)\n    const transformElements = shallowReactive<Set<HTMLElement>>(new Set())\n\n    /**\n     * Setup functions\n     */\n    function updateSlideSize(): void {\n      if (!viewport.value) return\n      let multiplierWidth = 1\n      transformElements.forEach((el) => {\n        const transformArr = getTransformValues(el)\n\n        if (transformArr.length === 6) {\n          multiplierWidth *= transformArr[0]\n        }\n      })\n\n      // Calculate size based on orientation\n      if (isVertical.value) {\n        if (config.height !== 'auto') {\n          const height =\n            typeof config.height === 'string' && isNaN(parseInt(config.height))\n              ? viewport.value.getBoundingClientRect().height\n              : parseInt(config.height as string)\n\n          slideSize.value = (height - totalGap.value) / config.itemsToShow\n        }\n      } else {\n        const width = viewport.value.getBoundingClientRect().width\n        slideSize.value = (width / multiplierWidth - totalGap.value) / config.itemsToShow\n      }\n    }\n\n    function updateSlidesData(): void {\n      if (!config.wrapAround && slidesCount.value > 0) {\n        currentSlideIndex.value = getNumberInRange({\n          val: currentSlideIndex.value,\n          max: maxSlideIndex.value,\n          min: minSlideIndex.value,\n        })\n      }\n\n      // Validate itemsToShow\n      config.itemsToShow = getNumberInRange({\n        val: config.itemsToShow,\n        max: slidesCount.value,\n        min: 1,\n      })\n    }\n\n    const ignoreAnimations = computed<false | string[]>(() => {\n      if (typeof props.ignoreAnimations === 'string') {\n        return props.ignoreAnimations.split(',')\n      } else if (Array.isArray(props.ignoreAnimations)) {\n        return props.ignoreAnimations\n      } else if (!props.ignoreAnimations) {\n        return []\n      }\n      return false\n    })\n\n    watchEffect(() => updateSlidesData())\n\n    watchEffect(() => {\n      // Call updateSlideSize when viewport is ready and track deps\n      updateSlideSize()\n    })\n\n    let animationInterval: number\n\n    const setAnimationInterval = (event: AnimationEvent) => {\n      const target = event.target as HTMLElement\n      if (\n        !target?.contains(root.value) ||\n        (Array.isArray(ignoreAnimations.value) &&\n          ignoreAnimations.value.includes(event.animationName))\n      ) {\n        return\n      }\n\n      transformElements.add(target)\n      if (!animationInterval) {\n        const stepAnimation = () => {\n          animationInterval = requestAnimationFrame(() => {\n            updateSlideSize()\n            stepAnimation()\n          })\n        }\n        stepAnimation()\n      }\n    }\n    const finishAnimation = (event: AnimationEvent | TransitionEvent) => {\n      const target = event.target as HTMLElement\n      if (target) {\n        transformElements.delete(target)\n      }\n      if (animationInterval && transformElements.size === 0) {\n        cancelAnimationFrame(animationInterval)\n        updateSlideSize()\n      }\n    }\n\n    const mounted = ref(false)\n\n    if (typeof document !== 'undefined') {\n      watchEffect(() => {\n        if (mounted.value && ignoreAnimations.value !== false) {\n          document.addEventListener('animationstart', setAnimationInterval)\n          document.addEventListener('animationend', finishAnimation)\n        } else {\n          document.removeEventListener('animationstart', setAnimationInterval)\n          document.removeEventListener('animationend', finishAnimation)\n        }\n      })\n    }\n\n    onMounted((): void => {\n      mounted.value = true\n      updateBreakpointsConfig()\n      initAutoplay()\n\n      if (root.value) {\n        resizeObserver = new ResizeObserver(handleResize)\n        resizeObserver.observe(root.value)\n      }\n\n      emit('init')\n    })\n\n    onBeforeUnmount(() => {\n      mounted.value = false\n\n      slideRegistry.cleanup()\n\n      if (transitionTimer) {\n        clearTimeout(transitionTimer)\n      }\n      if (animationInterval) {\n        cancelAnimationFrame(animationInterval)\n      }\n      if (autoplayTimer) {\n        clearInterval(autoplayTimer)\n      }\n      if (resizeObserver) {\n        resizeObserver.disconnect()\n        resizeObserver = null\n      }\n\n      if (typeof document !== 'undefined') {\n        handleBlur()\n      }\n      if (root.value) {\n        root.value.removeEventListener('transitionend', updateSlideSize)\n        root.value.removeEventListener('animationiteration', updateSlideSize)\n      }\n    })\n\n    /**\n     * Carousel Event listeners\n     */\n    let isTouch = false\n    const startPosition = { x: 0, y: 0 }\n    const dragged = reactive({ x: 0, y: 0 })\n    const isHover = ref(false)\n    const isDragging = ref(false)\n\n    const handleMouseEnter = (): void => {\n      isHover.value = true\n    }\n    const handleMouseLeave = (): void => {\n      isHover.value = false\n    }\n\n    const handleArrowKeys = throttle((event: KeyboardEvent): void => {\n      if (event.ctrlKey) return\n      switch (event.key) {\n        case 'ArrowLeft':\n        case 'ArrowUp':\n          if (isVertical.value === event.key.endsWith('Up')) {\n            if (isReversed.value) {\n              nav.next(true)\n            } else {\n              nav.prev(true)\n            }\n          }\n          break\n        case 'ArrowRight':\n        case 'ArrowDown':\n          if (isVertical.value === event.key.endsWith('Down')) {\n            if (isReversed.value) {\n              nav.prev(true)\n            } else {\n              nav.next(true)\n            }\n          }\n          break\n      }\n    }, 200)\n    const handleFocus = (): void => {\n      document.addEventListener('keydown', handleArrowKeys)\n    }\n    const handleBlur = (): void => {\n      document.removeEventListener('keydown', handleArrowKeys)\n    }\n\n    function handleDragStart(event: MouseEvent | TouchEvent): void {\n      // Prevent drag initiation on input elements or if already sliding\n      const targetTagName = (event.target as HTMLElement).tagName\n      if (['INPUT', 'TEXTAREA', 'SELECT'].includes(targetTagName) || isSliding.value) {\n        return\n      }\n\n      // Detect if the event is a touchstart or mousedown event\n      isTouch = event.type === 'touchstart'\n\n      // For mouse events, prevent default to avoid text selection\n      if (!isTouch) {\n        event.preventDefault()\n        if ((event as MouseEvent).button !== 0) {\n          // Ignore non-left-click mouse events\n          return\n        }\n      }\n\n      // Initialize start positions for the drag\n      startPosition.x = 'touches' in event ? event.touches[0].clientX : event.clientX\n      startPosition.y = 'touches' in event ? event.touches[0].clientY : event.clientY\n\n      // Attach event listeners for dragging and drag end\n\n      const moveEvent = isTouch ? 'touchmove' : 'mousemove'\n      const endEvent = isTouch ? 'touchend' : 'mouseup'\n      document.addEventListener(moveEvent, handleDragging, { passive: false })\n      document.addEventListener(endEvent, handleDragEnd, { passive: true })\n    }\n\n    const handleDragging = throttle((event: TouchEvent | MouseEvent): void => {\n      isDragging.value = true\n\n      // Get the current position based on the interaction type (touch or mouse)\n      const currentX = 'touches' in event ? event.touches[0].clientX : event.clientX\n      const currentY = 'touches' in event ? event.touches[0].clientY : event.clientY\n\n      // Calculate deltas for X and Y axes\n      dragged.x = currentX - startPosition.x\n      dragged.y = currentY - startPosition.y\n\n      const draggedSlides = getDraggedSlidesCount({\n        isVertical: isVertical.value,\n        isReversed: isReversed.value,\n        dragged,\n        effectiveSlideSize: effectiveSlideSize.value,\n      })\n\n      activeSlideIndex.value = config.wrapAround\n        ? currentSlideIndex.value + draggedSlides\n        : getNumberInRange({\n            val: currentSlideIndex.value + draggedSlides,\n            max: maxSlideIndex.value,\n            min: minSlideIndex.value,\n          })\n\n      // Emit a drag event for further customization if needed\n      emit('drag', { deltaX: dragged.x, deltaY: dragged.y })\n    })\n\n    function handleDragEnd(): void {\n      handleDragging.cancel()\n\n      // Prevent accidental clicks when there is a slide drag\n      if (activeSlideIndex.value !== currentSlideIndex.value && !isTouch) {\n        const preventClick = (e: MouseEvent) => {\n          e.preventDefault()\n          window.removeEventListener('click', preventClick)\n        }\n        window.addEventListener('click', preventClick)\n      }\n\n      slideTo(activeSlideIndex.value)\n\n      // Reset drag state\n      dragged.x = 0\n      dragged.y = 0\n      isDragging.value = false\n\n      const moveEvent = isTouch ? 'touchmove' : 'mousemove'\n      const endEvent = isTouch ? 'touchend' : 'mouseup'\n      document.removeEventListener(moveEvent, handleDragging)\n      document.removeEventListener(endEvent, handleDragEnd)\n    }\n\n    /**\n     * Autoplay\n     */\n    function initAutoplay(): void {\n      if (!config.autoplay || config.autoplay <= 0) {\n        return\n      }\n\n      autoplayTimer = setInterval(() => {\n        if (config.pauseAutoplayOnHover && isHover.value) {\n          return\n        }\n\n        next()\n      }, config.autoplay)\n    }\n\n    function stopAutoplay(): void {\n      if (autoplayTimer) {\n        clearInterval(autoplayTimer)\n        autoplayTimer = null\n      }\n    }\n\n    function resetAutoplay(): void {\n      stopAutoplay()\n      initAutoplay()\n    }\n\n    /**\n     * Navigation function\n     */\n    const isSliding = ref(false)\n\n    function slideTo(slideIndex: number, skipTransition = false): void {\n      if (!skipTransition && isSliding.value) {\n        return\n      }\n\n      let targetIndex = slideIndex\n      let mappedIndex = slideIndex\n\n      prevSlideIndex.value = currentSlideIndex.value\n\n      if (!config.wrapAround) {\n        targetIndex = getNumberInRange({\n          val: targetIndex,\n          max: maxSlideIndex.value,\n          min: minSlideIndex.value,\n        })\n      } else {\n        mappedIndex = mapNumberToRange({\n          val: targetIndex,\n          max: maxSlideIndex.value,\n          min: 0,\n        })\n      }\n\n      emit('slide-start', {\n        slidingToIndex: slideIndex,\n        currentSlideIndex: currentSlideIndex.value,\n        prevSlideIndex: prevSlideIndex.value,\n        slidesCount: slidesCount.value,\n      })\n\n      stopAutoplay()\n      isSliding.value = true\n\n      currentSlideIndex.value = targetIndex\n      if (mappedIndex !== targetIndex) {\n        modelWatcher.pause()\n      }\n      emit('update:modelValue', mappedIndex)\n\n      const transitionCallback = (): void => {\n        if (config.wrapAround) {\n          if (mappedIndex !== targetIndex) {\n            modelWatcher.resume()\n\n            currentSlideIndex.value = mappedIndex\n            emit('loop', {\n              currentSlideIndex: currentSlideIndex.value,\n              slidingToIndex: slideIndex,\n            })\n          }\n        }\n\n        emit('slide-end', {\n          currentSlideIndex: currentSlideIndex.value,\n          prevSlideIndex: prevSlideIndex.value,\n          slidesCount: slidesCount.value,\n        })\n\n        isSliding.value = false\n        resetAutoplay()\n      }\n\n      transitionTimer = setTimeout(transitionCallback, config.transition)\n    }\n\n    function next(skipTransition = false): void {\n      slideTo(currentSlideIndex.value + config.itemsToScroll, skipTransition)\n    }\n\n    function prev(skipTransition = false): void {\n      slideTo(currentSlideIndex.value - config.itemsToScroll, skipTransition)\n    }\n\n    const nav: CarouselNav = { slideTo, next, prev }\n\n    const scrolledIndex = computed(() =>\n      getScrolledIndex({\n        config,\n        currentSlide: currentSlideIndex.value,\n        slidesCount: slidesCount.value,\n      })\n    )\n\n    const provided: InjectedCarousel = reactive({\n      config,\n      slidesCount,\n      viewport,\n      slides,\n      scrolledIndex,\n      currentSlide: currentSlideIndex,\n      activeSlide: activeSlideIndex,\n      maxSlide: maxSlideIndex,\n      minSlide: minSlideIndex,\n      slideSize,\n      isVertical,\n      normalizedDir,\n      nav,\n      isSliding,\n      slideRegistry,\n    })\n\n    provide(injectCarousel, provided)\n    /** @deprecated provides */\n    provide('config', config)\n    provide('slidesCount', slidesCount)\n    provide('currentSlide', currentSlideIndex)\n    provide('maxSlide', maxSlideIndex)\n    provide('minSlide', minSlideIndex)\n    provide('slideSize', slideSize)\n    provide('isVertical', isVertical)\n    provide('normalizeDir', normalizedDir)\n    provide('nav', nav)\n    provide('isSliding', isSliding)\n\n    function restartCarousel(): void {\n      updateBreakpointsConfig()\n      updateSlidesData()\n      updateSlideSize()\n      resetAutoplay()\n    }\n\n    // Update the carousel on props change\n    watch(\n      () => [fallbackConfig.value, props.breakpoints],\n      () => updateBreakpointsConfig(),\n      { deep: true }\n    )\n\n    watch(\n      () => props.autoplay,\n      () => resetAutoplay()\n    )\n\n    // Handle changing v-model value\n    const modelWatcher = watch(\n      () => props.modelValue,\n      (val) => {\n        if (val === currentSlideIndex.value) {\n          return\n        }\n        slideTo(Number(val), true)\n      }\n    )\n\n    // Init carousel\n    emit('before-init')\n\n    const data = reactive<CarouselData>({\n      config,\n      slidesCount,\n      slideSize,\n      currentSlide: currentSlideIndex,\n      maxSlide: maxSlideIndex,\n      minSlide: minSlideIndex,\n      middleSlide: middleSlideIndex,\n    })\n\n    expose<CarouselExposed>({\n      updateBreakpointsConfig,\n      updateSlidesData,\n      updateSlideSize,\n      restartCarousel,\n      slideTo,\n      next,\n      prev,\n      nav,\n      data,\n    })\n\n    const trackHeight = computed(() => {\n      // If the carousel is vertical and height is set to auto, calculate the height based on slide size and gap\n      if (config.height === 'auto') {\n        if (isVertical.value && slideSize.value) {\n          return `${slideSize.value * config.itemsToShow + totalGap.value}px`\n        }\n        return undefined\n      }\n\n      if (\n        typeof config.height === 'number' ||\n        parseFloat(config.height).toString() === config.height\n      ) {\n        return `${config.height}px`\n      } else {\n        return config.height\n      }\n    })\n\n    const clonedSlidesCount = computed(() => {\n      if (!config.wrapAround) {\n        return { before: 0, after: 0 }\n      }\n\n      const slidesToClone = Math.ceil(config.itemsToShow + (config.itemsToScroll - 1))\n      const before = slidesToClone - activeSlideIndex.value\n      const after = slidesToClone - (slidesCount.value - (activeSlideIndex.value + 1))\n\n      return {\n        before: Math.max(0, before),\n        after: Math.max(0, after),\n      }\n    })\n\n    const clonedSlidesOffset = computed(\n      () => clonedSlidesCount.value.before * effectiveSlideSize.value * -1\n    )\n    const trackTransform: ComputedRef<string> = computed(() => {\n      const directionMultiplier = isReversed.value ? 1 : -1\n      const translateAxis = isVertical.value ? 'Y' : 'X'\n\n      // Calculate the total offset for slide transformation\n      const scrolledOffset =\n        scrolledIndex.value * effectiveSlideSize.value * directionMultiplier\n\n      // Include user drag interaction offset\n      const dragOffset = isVertical.value ? dragged.y : dragged.x\n\n      const totalOffset = scrolledOffset + dragOffset\n\n      return `translate${translateAxis}(${totalOffset}px)`\n    })\n\n    const trackStyle = computed(() => ({\n      transform: config.slideEffect === 'slide' ? trackTransform.value : undefined,\n      gap: config.gap > 0 ? `${config.gap}px` : undefined,\n      '--vc-trk-transition-duration': isSliding.value\n        ? `${config.transition}ms`\n        : undefined,\n      '--vc-trk-height': trackHeight.value,\n      '--vc-trk-cloned-offset': `${clonedSlidesOffset.value}px`,\n    }))\n\n    return () => {\n      const slotSlides = slots.default || slots.slides\n      const outputSlides = slotSlides?.(data) || []\n\n      const { before, after } = clonedSlidesCount.value\n      const slidesBefore = createCloneSlides({\n        slides,\n        position: 'before',\n        toShow: before,\n      })\n\n      const slidesAfter = createCloneSlides({\n        slides,\n        position: 'after',\n        toShow: after,\n      })\n\n      const output = [...slidesBefore, ...outputSlides, ...slidesAfter]\n\n      if (!config.enabled || !output.length) {\n        return h(\n          'section',\n          {\n            ref: root,\n            class: ['carousel', 'is-disabled'],\n          },\n          output\n        )\n      }\n\n      const addonsElements = slots.addons?.(data) || []\n\n      const trackEl = h(\n        'ol',\n        {\n          class: 'carousel__track',\n          style: trackStyle.value,\n          onMousedownCapture: config.mouseDrag ? handleDragStart : null,\n          onTouchstartPassiveCapture: config.touchDrag ? handleDragStart : null,\n        },\n        output\n      )\n      const viewPortEl = h('div', { class: 'carousel__viewport', ref: viewport }, trackEl)\n\n      return h(\n        'section',\n        {\n          ref: root,\n          class: [\n            'carousel',\n            `is-${normalizedDir.value}`,\n            `is-effect-${config.slideEffect}`,\n            {\n              'is-vertical': isVertical.value,\n              'is-sliding': isSliding.value,\n              'is-dragging': isDragging.value,\n              'is-hover': isHover.value,\n            },\n          ],\n          dir: normalizedDir.value,\n          'aria-label': config.i18n['ariaGallery'],\n          tabindex: '0',\n          onFocus: handleFocus,\n          onBlur: handleBlur,\n          onMouseenter: handleMouseEnter,\n          onMouseleave: handleMouseLeave,\n        },\n        [viewPortEl, addonsElements, h(ARIAComponent)]\n      )\n    }\n  },\n})\n", "export enum IconName {\n  arrowUp = 'arrowUp',\n  arrowDown = 'arrowDown',\n  arrowRight = 'arrowRight',\n  arrowLeft = 'arrowLeft',\n}\n\nexport type IconNameValue = `${IconName}`\n\nexport interface IconProps {\n  title?: string\n  name: IconNameValue\n}\n", "import { defineComponent, h, inject, PropType } from 'vue'\n\nimport { DEFAULT_CONFIG, injectCarousel } from '@/shared'\n\nimport { IconName, IconNameValue, IconProps } from './Icon.types'\n\nfunction isIconName(candidate: string): candidate is IconName {\n  return candidate in IconName\n}\n\nconst iconI18n = <Name extends IconNameValue>(name: Name) =>\n  `icon${name.charAt(0).toUpperCase() + name.slice(1)}` as `icon${Capitalize<Name>}`\n\nconst validateIconName = (value: IconNameValue) => {\n  return value && isIconName(value)\n}\n\nexport const icons = {\n  arrowUp: 'M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6-6 6z',\n  arrowDown: 'M7.41 8.59L12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z',\n  arrowRight: 'M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z',\n  arrowLeft: 'M15.41 16.59L10.83 12l4.58-4.59L14 6l-6 6 6 6 1.41-1.41z',\n}\n\nexport const Icon = defineComponent<IconProps>({\n  props: {\n    name: {\n      type: String as PropType<IconNameValue>,\n      required: true,\n      validator: validateIconName,\n    },\n    title: {\n      type: String,\n      default: (props: { name: IconNameValue }) =>\n        props.name ? DEFAULT_CONFIG.i18n[iconI18n(props.name)] : '',\n    },\n  },\n  setup(props) {\n    const carousel = inject(injectCarousel, null)\n\n    return () => {\n      const iconName = props.name\n      if (!iconName || !validateIconName(iconName)) return\n\n      const path = icons[iconName]\n      const pathEl = h('path', { d: path })\n\n      const iconTitle: string =\n        carousel?.config.i18n[iconI18n(iconName)] || props.title!\n\n      const titleEl = h('title', iconTitle)\n\n      return h(\n        'svg',\n        {\n          class: 'carousel__icon',\n          viewBox: '0 0 24 24',\n          role: 'img',\n          'aria-label': iconTitle,\n        },\n        [titleEl, pathEl]\n      )\n    }\n  },\n})\n", "import { inject, h, defineComponent, computed } from 'vue'\n\nimport { NormalizedDir, injectCarousel } from '@/shared'\n\nimport { Icon, IconNameValue } from '../Icon'\n\nimport { NavigationProps } from './Navigation.types'\n\nexport const Navigation = defineComponent<NavigationProps>({\n  name: 'CarouselNavigation',\n  inheritAttrs: false,\n  setup(props, { slots, attrs }) {\n    const carousel = inject(injectCarousel)\n    if (!carousel) {\n      return () => '' // Don't render, let vue warn about the missing provide\n    }\n    const { next: slotNext, prev: slotPrev } = slots\n\n    const getPrevIcon = () => {\n      const directionIcons: Record<NormalizedDir, IconNameValue> = {\n        ltr: 'arrowLeft',\n        rtl: 'arrowRight',\n        ttb: 'arrowUp',\n        btt: 'arrowDown',\n      }\n\n      return directionIcons[carousel.normalizedDir]\n    }\n    const getNextIcon = () => {\n      const directionIcons: Record<NormalizedDir, IconNameValue> = {\n        ltr: 'arrowRight',\n        rtl: 'arrowLeft',\n        ttb: 'arrowDown',\n        btt: 'arrowUp',\n      }\n\n      return directionIcons[carousel.normalizedDir]\n    }\n\n    const prevDisabled = computed(() => !carousel.config.wrapAround && carousel.currentSlide <= carousel.minSlide)\n    const nextDisabled = computed(() => !carousel.config.wrapAround && carousel.currentSlide >= carousel.maxSlide)\n\n    return () => {\n      const { i18n } = carousel.config\n      const prevButton = h(\n        'button',\n        {\n          type: 'button',\n          disabled: prevDisabled.value,\n          'aria-label': i18n['ariaPreviousSlide'],\n          title: i18n['ariaPreviousSlide'],\n          onClick: carousel.nav.prev,\n          ...attrs,\n          class: [\n            'carousel__prev',\n            {'carousel__prev--disabled': prevDisabled.value},\n            attrs.class,\n          ],\n        },\n        slotPrev?.() || h(Icon, { name: getPrevIcon() })\n      )\n      const nextButton = h(\n        'button',\n        {\n          type: 'button',\n          disabled: nextDisabled.value,\n          'aria-label': i18n['ariaNextSlide'],\n          title: i18n['ariaNextSlide'],\n          onClick: carousel.nav.next,\n          ...attrs,\n          class: [\n            'carousel__next',\n            {'carousel__next--disabled': nextDisabled.value},\n            attrs.class,\n          ],\n        },\n        slotNext?.() || h(Icon, { name: getNextIcon() })\n      )\n\n      return [prevButton, nextButton]\n    }\n  },\n})\n", "import { inject, h, VNode, defineComponent, computed } from 'vue'\n\nimport { injectCarousel } from '@/shared'\nimport { mapNumberToRange, i18nFormatter, calculateOffset } from '@/utils'\n\nimport { PaginationProps } from './Pagination.types'\n\nexport const Pagination = defineComponent<PaginationProps>({\n  name: 'CarouselPagination',\n  props: {\n    disableOnClick: {\n      type: Boolean,\n    },\n    paginateByItemsToShow: {\n      type: Boolean,\n    },\n  },\n  setup(props) {\n    const carousel = inject(injectCarousel)\n\n    if (!carousel) {\n      return () => '' // Don't render, let vue warn about the missing provide\n    }\n\n    const offset = computed(() =>\n      calculateOffset(carousel.config.snapAlign, carousel.config.itemsToShow)\n    )\n    const isPaginated = computed(\n      () => props.paginateByItemsToShow && carousel.config.itemsToShow > 1\n    )\n    const currentPage = computed(() =>\n      Math.ceil((carousel.activeSlide - offset.value) / carousel.config.itemsToShow)\n    )\n    const pageCount = computed(() =>\n      Math.ceil(carousel.slidesCount / carousel.config.itemsToShow)\n    )\n\n    const isActive = (slide: number): boolean =>\n      mapNumberToRange(\n        isPaginated.value\n          ? {\n              val: currentPage.value,\n              max: pageCount.value - 1,\n              min: 0,\n            }\n          : {\n              val: carousel.activeSlide,\n              max: carousel.maxSlide,\n              min: carousel.minSlide,\n            }\n      ) === slide\n\n    return () => {\n      const children: Array<VNode> = []\n\n      for (\n        let slide = isPaginated.value ? 0 : carousel.minSlide;\n        slide <= (isPaginated.value ? pageCount.value - 1 : carousel.maxSlide);\n        slide++\n      ) {\n        const buttonLabel = i18nFormatter(\n          carousel.config.i18n[\n            isPaginated.value ? 'ariaNavigateToPage' : 'ariaNavigateToSlide'\n          ],\n          {\n            slideNumber: slide + 1,\n          }\n        )\n        const active = isActive(slide)\n        const button = h('button', {\n          type: 'button',\n          class: {\n            'carousel__pagination-button': true,\n            'carousel__pagination-button--active': active,\n          },\n          'aria-label': buttonLabel,\n          'aria-pressed': active,\n          'aria-controls': carousel.slides[slide]?.exposed?.id,\n          title: buttonLabel,\n          disabled: props.disableOnClick,\n          onClick: () =>\n            carousel.nav.slideTo(\n              isPaginated.value\n                ? slide * carousel.config.itemsToShow + offset.value\n                : slide\n            ),\n        })\n        const item = h('li', { class: 'carousel__pagination-item', key: slide }, button)\n        children.push(item)\n      }\n\n      return h('ol', { class: 'carousel__pagination' }, children)\n    }\n  },\n})\n", "import {\n  defineComponent,\n  inject,\n  h,\n  SetupContext,\n  computed,\n  ComputedRef,\n  getCurrentInstance,\n  onUnmounted,\n  provide,\n  useId,\n  onMounted,\n  onUpdated,\n  DeepReadonly,\n  ref,\n} from 'vue'\n\nimport { injectCarousel } from '@/shared'\nimport { disableChildrenTabbing } from '@/utils'\n\nimport { SlideProps } from './Slide.types'\n\nexport const Slide = defineComponent({\n  name: 'CarouselSlide',\n  props: {\n    isClone: {\n      type: Boolean,\n      default: false,\n    },\n    id: {\n      type: String,\n      default: (props: { isClone?: boolean }) => (props.isClone ? undefined : useId()),\n    },\n    index: {\n      type: Number,\n      default: undefined,\n    },\n  },\n  setup(props: DeepReadonly<SlideProps>, { slots, expose }: SetupContext) {\n    const carousel = inject(injectCarousel)\n    provide(injectCarousel, undefined) // Don't provide for nested slides\n\n    if (!carousel) {\n      return () => '' // Don't render, let vue warn about the missing provide\n    }\n\n    const currentIndex = ref(props.index)\n\n    const setIndex = (newIndex: number) => {\n      currentIndex.value = newIndex\n    }\n\n    expose({\n      id: props.id,\n      setIndex,\n    })\n\n    const isActive: ComputedRef<boolean> = computed(\n      () => currentIndex.value === carousel.activeSlide\n    )\n    const isPrev: ComputedRef<boolean> = computed(\n      () => currentIndex.value === carousel.activeSlide - 1\n    )\n    const isNext: ComputedRef<boolean> = computed(\n      () => currentIndex.value === carousel.activeSlide + 1\n    )\n    const isVisible: ComputedRef<boolean> = computed(\n      () =>\n        currentIndex.value >= Math.floor(carousel.scrolledIndex) &&\n        currentIndex.value <\n          Math.ceil(carousel.scrolledIndex) + carousel.config.itemsToShow\n    )\n\n    const slideStyle = computed(() => {\n      const dimension =\n        carousel.config.gap > 0 && carousel.config.itemsToShow > 1\n          ? `calc(${100 / carousel.config.itemsToShow}% - ${\n              (carousel.config.gap * (carousel.config.itemsToShow - 1)) /\n              carousel.config.itemsToShow\n            }px)`\n          : `${100 / carousel.config.itemsToShow}%`\n\n      return carousel.isVertical ? { height: dimension } : { width: dimension }\n    })\n\n    const instance = getCurrentInstance()!\n\n    carousel.slideRegistry.registerSlide(instance, props.index)\n    onUnmounted(() => {\n      carousel.slideRegistry.unregisterSlide(instance)\n    })\n\n    if (props.isClone) {\n      // Prevent cloned slides from being focusable\n      onMounted(() => {\n        disableChildrenTabbing(instance.vnode)\n      })\n      onUpdated(() => {\n        disableChildrenTabbing(instance.vnode)\n      })\n    }\n\n    return () => {\n      if (!carousel.config.enabled) {\n        return slots.default?.()\n      }\n\n      return h(\n        'li',\n        {\n          style: slideStyle.value,\n          class: {\n            carousel__slide: true,\n            'carousel__slide--clone': props.isClone,\n            'carousel__slide--visible': isVisible.value,\n            'carousel__slide--active': isActive.value,\n            'carousel__slide--prev': isPrev.value,\n            'carousel__slide--next': isNext.value,\n            'carousel__slide--sliding': carousel.isSliding,\n          },\n          onFocusin: () => {\n            // Prevent the viewport being scrolled by the focus\n            if (carousel.viewport) {\n              carousel.viewport.scrollLeft = 0\n            }\n            carousel.nav.slideTo(currentIndex.value)\n          },\n          id: props.isClone ? undefined : props.id,\n          'aria-hidden': props.isClone || undefined,\n        },\n        slots.default?.({\n          isActive: isActive.value,\n          isClone: props.isClone,\n          isPrev: isPrev.value,\n          isNext: isNext.value,\n          isSliding: carousel.isSliding,\n          isVisible: isVisible.value,\n        })\n      )\n    }\n  },\n})\n"],
  "mappings": "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",
  "names": ["_a", "ARIAComponent", "IconName"]
}
